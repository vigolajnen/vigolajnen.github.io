(function () {
   // header scroll
   const body = document.body;
  //  const triggerMenu = document.querySelector(".page-header__btn-burger");

   const scrollUp = "scroll-up";
   const scrollDown = "scroll-down";
   let lastScroll = 0;

  //  triggerMenu.addEventListener("click", () => {
  //    body.classList.toggle("menu-open");
  //    triggerMenu.classList.toggle("active");
  //  });

   window.addEventListener("scroll", () => {
     const currentScroll = window.pageYOffset;
     if (currentScroll <= 0) {
       body.classList.remove(scrollUp);
       return;
     }

     if (currentScroll > lastScroll && !body.classList.contains(scrollDown)) {
       // down
       body.classList.remove(scrollUp);
       body.classList.add(scrollDown);
     } else if (currentScroll < lastScroll && body.classList.contains(scrollDown)) {
       // up
       body.classList.remove(scrollDown);
       body.classList.add(scrollUp);
     }
     lastScroll = currentScroll;
   });
})()

// mob menu

export let mobileMenuToggle = () => {
  const page = document.querySelector('.page');
  const btnMenuOpen = document.querySelector('.page-header__btn-menu');
  const btnMenuOpenClose = document.querySelector('.mobile-menu__btn-close');
  const headerTop = document.querySelector('.page-header');
  const mobMenu = document.querySelector('.mobile-menu');

  if (btnMenuOpen) {
    btnMenuOpen.addEventListener('click', function() {
      headerTop.classList.add('page-header--mob');
      page.classList.add('page--overlay');
      mobMenu.classList.add('active');
    });
  }

  if (btnMenuOpenClose) {
    btnMenuOpenClose.addEventListener('click', function() {
      headerTop.classList.remove('page-header--mob');
      page.classList.remove('page--overlay');
      mobMenu.classList.remove('active');
    });
  }

  if (mobMenu) {
    mobMenu.addEventListener('click', () => {
      mobMenu.classList.remove('active');
    });
  }

  window.onresize = function() {
    if (window.screen.width > 768) {
      document.querySelector('.page').classList.remove('page--overlay');
      if (headerTop.classList.contains('page-header--mob')) {
        headerTop.classList.remove('page-header--mob');
      }
    }
  };
};



mobileMenuToggle();



// расписание

const templateLesson = lesson => {
  return (
    `<div class="lesson ` + lesson.dopClass +`" data-bs-content-id="popover-content" tabindex="0" role="button" data-bs-toggle="popover" data-bs-placement="bottom" data-bs-trigger="focus">
      <div class="lesson__wrapper">
        <div class="lesson__name">` + lesson.name +`</div>
        <div class="lesson__trainer">
          <span>` + lesson.trainer +`</span>
          <svg class="icon" width="15" height="18" viewBox="0 0 15 18">
            <use xlink:href="img/sprite.svg#sch-user"></use>
          </svg>
        </div>
        <div class="lesson__place">
          <span>` + lesson.place +`</span>
          <svg class="icon" width="17" height="20" viewBox="0 0 17 20">
            <use xlink:href="img/sprite.svg#sch-spa"></use>
          </svg>
        </div>
        <div class="d-none lesson__popover" id="popover-content">
          <h4 class="title">` + lesson.name +`</h4>
          <div class="text">` + lesson.content +`</div>
          <a class="lesson__link link-text link-text--more" href=` + lesson.url +`>
            <span>Информация о тренере</span>
          </a>
        </div>
      </div>
    </div>`
  );
};

const weekDaysDB = ['Пн', 'Вт', 'Ср', 'Чт', 'Пт', 'Сб', 'Вс'];
const weekDaysMobDB = ['Понедельник', 'Вторник', 'Среда', 'Четверг', 'Пятница', 'Суббота', 'Воскресенье'];
const nowWeekDaysDB = [
  '15.05',
  '16.05',
  '17.05',
  '18.05',
  '19.05',
  '20.05',
  '21.05',
];
const hoursMorningDB = ['09:00', '10:00', '11:00'];
const hoursDayDB = ['12:00', '13:00', '14:00', '15:00', '16:00'];
const hourseveningDB = ['17:00', '18:00', '19:00', '20:00', '21:00'];

const hoursAllDB = [...hoursMorningDB, ...hoursDayDB, ...hourseveningDB];

const placesDB = ['Большой аэробный зал', 'Большой бассейн'];
const trainersDB = ['Кайгородцева Татьяна', 'Малахова Елена'];
const lessonsDB = [
  {
    dopClass: '',
    name: 'Flex',
    content:
      'Внимание! Посещение урока возможно только в спортивной обуви или в носках. Комплекс упражнений направленный на растяжку и релаксацию. Подобные регулярные групповые тренировки помогут повысить тонус мышц, улучшить координацию, восстановить осанку, сделать движения пластичными. Рекомендуется для любого уровня подготовленности. Продолжительность занятий составляет 55 минут. Внимание! Посещение урока возможно только в спортивной обуви или в носках. Комплекс упражнений направленный на растяжку и релаксацию. Подобные регулярные групповые тренировки помогут повысить тонус мышц, улучшить координацию, восстановить осанку, сделать движения пластичными. Рекомендуется для любого уровня подготовленности. Продолжительность занятий составляет 55 минут.',
  },
  {
    dopClass: 'lesson--pay',
    name: 'Fitness Yoga',
    content: '11',
  },
  {
    dopClass: '',
    name: 'СЕКЦИЯ (9-11лет) «Бодибилдинг для мальчиков»',
    content: '33',
  },
  {
    dopClass: 'lesson--pool',
    name: 'СЕКЦИЯ «Школа плавания 13»   (11-13 лет)',
    content: '44',
  },
];

const createLesson = (k, j) => {
  return templateLesson({
    dopClass: lessonsDB[k].dopClass,
    name: lessonsDB[k].name,
    content: lessonsDB[k].content,
    trainer: trainersDB[j],
    place: placesDB[j],
    url: '#',
  });
};

const getDayWeek = item => {
  if (window.matchMedia('(max-width: 767px)').matches) {
    return item.mobile;
  } else {
    return item.desctop;
  }
};

const scheduleDB = [
  {
    day: nowWeekDaysDB[0],
    lessons: [
      {
        hours: hoursAllDB[0],
        template: createLesson(0, 1),
      },
      {
        hours: hoursAllDB[1],
        template: '',
      },
      {
        hours: hoursAllDB[2],
        template: createLesson(1, 1),
      },
      {
        hours: hoursAllDB[3],
        template: createLesson(2, 0),
      },
      {
        hours: hoursAllDB[4],
        template: createLesson(1, 1),
      },
      {
        hours: hoursAllDB[5],
        template: '',
      },
      {
        hours: hoursAllDB[6],
        template: createLesson(1, 1),
      },
      {
        hours: hoursAllDB[7],
        template: createLesson(0, 0),
      },
      {
        hours: hoursAllDB[8],
        template: createLesson(1, 0),
      },
      {
        hours: hoursAllDB[9],
        template: '',
      },
      {
        hours: hoursAllDB[10],
        template: createLesson(0, 1),
      },
      {
        hours: hoursAllDB[11],
        template: createLesson(3, 0),
      },
      {
        hours: hoursAllDB[12],
        template: createLesson(3, 0),
      },
    ],
  },
  {
    day: nowWeekDaysDB[1],
    lessons: [
      {
        hours: hoursAllDB[0],
        template: '',
      },
      {
        hours: hoursAllDB[1],
        template: '',
      },
      {
        hours: hoursAllDB[2],
        template: createLesson(1, 1),
      },
      {
        hours: hoursAllDB[3],
        template: '',
      },
      {
        hours: hoursAllDB[4],
        template: '',
      },
      {
        hours: hoursAllDB[5],
        template: '',
      },
      {
        hours: hoursAllDB[6],
        template: createLesson(1, 1),
      },
      {
        hours: hoursAllDB[7],
        template: '',
      },
      {
        hours: hoursAllDB[8],
        template: createLesson(1, 0),
      },
      {
        hours: hoursAllDB[9],
        template: '',
      },
      {
        hours: hoursAllDB[10],
        template: createLesson(0, 1),
      },
      {
        hours: hoursAllDB[11],
        template: '',
      },
      {
        hours: hoursAllDB[12],
        template: createLesson(3, 0),
      },
    ],
  },
  {
    day: nowWeekDaysDB[2],
    lessons: [
      {
        hours: hoursAllDB[0],
        template: createLesson(0, 1),
      },
      {
        hours: hoursAllDB[1],
        template: '',
      },
      {
        hours: hoursAllDB[2],
        template: createLesson(1, 1),
      },
      {
        hours: hoursAllDB[3],
        template: createLesson(2, 0),
      },
      {
        hours: hoursAllDB[4],
        template: '',
      },
      {
        hours: hoursAllDB[5],
        template: '',
      },
      {
        hours: hoursAllDB[6],
        template: '',
      },
      {
        hours: hoursAllDB[7],
        template: createLesson(0, 0),
      },
      {
        hours: hoursAllDB[8],
        template: createLesson(1, 0),
      },
      {
        hours: hoursAllDB[9],
        template: '',
      },
      {
        hours: hoursAllDB[10],
        template: createLesson(0, 1),
      },
      {
        hours: hoursAllDB[11],
        template: createLesson(3, 0),
      },
      {
        hours: hoursAllDB[12],
        template: '',
      },
    ],
  },
  {
    day: nowWeekDaysDB[3],
    lessons: [
      {
        hours: hoursAllDB[0],
        template: createLesson(0, 1),
      },
      {
        hours: hoursAllDB[1],
        template: '',
      },
      {
        hours: hoursAllDB[2],
        template: createLesson(1, 1),
      },
      {
        hours: hoursAllDB[3],
        template: createLesson(2, 0),
      },
      {
        hours: hoursAllDB[4],
        template: createLesson(1, 1),
      },
      {
        hours: hoursAllDB[5],
        template: '',
      },
      {
        hours: hoursAllDB[6],
        template: createLesson(1, 1),
      },
      {
        hours: hoursAllDB[7],
        template: createLesson(0, 0),
      },
      {
        hours: hoursAllDB[8],
        template: createLesson(1, 0),
      },
      {
        hours: hoursAllDB[9],
        template: '',
      },
      {
        hours: hoursAllDB[10],
        template: createLesson(0, 1),
      },
      {
        hours: hoursAllDB[11],
        template: createLesson(3, 0),
      },
      {
        hours: hoursAllDB[12],
        template: createLesson(3, 0),
      },
    ],
  },
  {
    day: nowWeekDaysDB[4],
    lessons: [
      {
        hours: hoursAllDB[0],
        template: createLesson(0, 1),
      },
      {
        hours: hoursAllDB[1],
        template: '',
      },
      {
        hours: hoursAllDB[2],
        template: createLesson(1, 1),
      },
      {
        hours: hoursAllDB[3],
        template: createLesson(2, 0),
      },
      {
        hours: hoursAllDB[4],
        template: createLesson(1, 1),
      },
      {
        hours: hoursAllDB[5],
        template: '',
      },
      {
        hours: hoursAllDB[6],
        template: createLesson(1, 1),
      },
      {
        hours: hoursAllDB[7],
        template: createLesson(0, 0),
      },
      {
        hours: hoursAllDB[8],
        template: createLesson(1, 0),
      },
      {
        hours: hoursAllDB[9],
        template: '',
      },
      {
        hours: hoursAllDB[10],
        template: createLesson(0, 1),
      },
      {
        hours: hoursAllDB[11],
        template: createLesson(3, 0),
      },
      {
        hours: hoursAllDB[12],
        template: createLesson(3, 0),
      },
    ],
  },
  {
    day: nowWeekDaysDB[5],
    lessons: [
      {
        hours: hoursAllDB[0],
        template: createLesson(0, 1),
      },
      {
        hours: hoursAllDB[1],
        template: '',
      },
      {
        hours: hoursAllDB[2],
        template: createLesson(1, 1),
      },
      {
        hours: hoursAllDB[3],
        template: createLesson(2, 0),
      },
      {
        hours: hoursAllDB[4],
        template: createLesson(1, 1),
      },
      {
        hours: hoursAllDB[5],
        template: '',
      },
      {
        hours: hoursAllDB[6],
        template: createLesson(1, 1),
      },
      {
        hours: hoursAllDB[7],
        template: createLesson(0, 0),
      },
      {
        hours: hoursAllDB[8],
        template: createLesson(1, 0),
      },
      {
        hours: hoursAllDB[9],
        template: '',
      },
      {
        hours: hoursAllDB[10],
        template: createLesson(0, 1),
      },
      {
        hours: hoursAllDB[11],
        template: createLesson(3, 0),
      },
      {
        hours: hoursAllDB[12],
        template: createLesson(3, 0),
      },
    ],
  },
  {
    day: nowWeekDaysDB[6],
    lessons: [
      {
        hours: hoursAllDB[0],
        template: '',
      },
      {
        hours: hoursAllDB[1],
        template: '',
      },
      {
        hours: hoursAllDB[2],
        template: createLesson(3, 0),
      },
      {
        hours: hoursAllDB[3],
        template: createLesson(2, 0),
      },
      {
        hours: hoursAllDB[4],
        template: createLesson(3, 0),
      },
      {
        hours: hoursAllDB[5],
        template: '',
      },
      {
        hours: hoursAllDB[6],
        template: createLesson(1, 1),
      },
      {
        hours: hoursAllDB[7],
        template: createLesson(0, 0),
      },
      {
        hours: hoursAllDB[8],
        template: createLesson(1, 0),
      },
      {
        hours: hoursAllDB[9],
        template: '',
      },
      {
        hours: hoursAllDB[10],
        template: createLesson(0, 1),
      },
      {
        hours: hoursAllDB[11],
        template: '',
      },
      {
        hours: hoursAllDB[12],
        template: '',
      },
    ],
  },
];


const daysWeekMob = [
  'Воскресенье',
  'Понедельник',
  'Вторник',
  'Среда',
  'Четверг',
  'Пятница',
  'Суббота',
];
let nowDateSlice = new Date().toLocaleDateString().slice(0, -5);
let nowDate = new Date();
let nowDayWeek = nowDateSlice + ' ' + daysWeekMob[nowDate.getDay()];

const schedule = document.querySelector('.schedule');
const weekDays = document.querySelector('.week-days');
const scheduleDays = document.querySelector('.schedule__days');
const scheduleBtn = document.querySelector('.schedule__button');
const mobWeekDaysButton = document.querySelectorAll('.mob-week-days__item');
const hours = document.querySelector('.hours');
const weekDaysItems = document.querySelectorAll(
  '.week-days__item .week-days__item-date',
);

let activeDay = document.querySelector('.schedule__item-active');

const days = document.querySelectorAll('[data-weekday]');

if (window.matchMedia('(max-width: 767px)').matches) {
  mobActiveDay(nowDayWeek);
  mobWeekDays(weekDaysItems);
}

function mobActiveDay(day) {
  const days = document.querySelectorAll('.days');

  days.forEach(function(item) {
    item.classList.add('days--hidden');
    // console.log(item.getAttribute('data-weekDay').slice(0, 5));
    // console.log(day.slice(0, 5));
    if (item.getAttribute('data-weekDay').slice(0, 5) === day.slice(0, 5)) {
      item.classList.remove('days--hidden');
    }
  });
}

function mobWeekDays(items) {
  items.forEach(function(item) {
    item.parentElement.addEventListener('click', function(e) {
      e.preventDefault();

      const titleday = item.parentElement.querySelector('.d-flex.d-sm-none');
      let day = item.innerText;

      titleday ? (day = day + ' ' + titleday.innerText) : day;

      activeDay.innerText = '';
      activeDay.innerText = day;
      console.log(day);
      // console.log(day);

      mobActiveDay(day);

      onMenuClose();
    });
  });
}

// function mobWeekDays(items) {
//   items.forEach(function(item) {
//     item.parentElement.addEventListener('click', function(e) {
//       e.preventDefault();

//       const titleday = item.parentElement.querySelector('.d-flex.d-sm-none');
//       let day = e.target.innerText;

//       titleday ? (day = day + ' ' + titleday.innerText) : day;

//       activeDay.innerText = '';
//       activeDay.innerText = day;
//       console.log(day);
//       // console.log(day);

//       mobActiveDay(day);

//       onMenuClose();
//     });
//   });
// }

function onScheduleBtnClick(btn) {
  if (btn) {
    btn.addEventListener('click', function(evt) {
      evt.preventDefault();

      mobMenuToogle();

      if (weekDays.classList.contains('week-days--open')) {
        mobWeekDays(weekDaysItems);
      }
    });
  }
}

onScheduleBtnClick(scheduleBtn);

function onMenuClose() {
  scheduleBtn.classList.remove('schedule__button--open');
  weekDays.classList.remove('week-days--open');
  hours.classList.remove('hours--opacity');
}

function mobMenuToogle() {
  scheduleBtn.classList.toggle('schedule__button--open');
  weekDays.classList.toggle('week-days--open');

  hours.classList.toggle('hours--opacity');
}

function onMobWeekDaysButton(btn) {
  [...mobWeekDaysButton].filter(item => {
    if (item.innerText.toLocaleLowerCase() === btn.toLocaleLowerCase()) {
      item.classList.add('mob-week-days__item--active');
    } else {
      item.classList.remove('mob-week-days__item--active');
    }
  });
}

function createschedule() {
  const daysListElement = document.querySelector('.schedule__days');
  const weekDaysListElement = document.querySelector('.schedule__week-days');

  const hoursListElement = document.querySelector('.schedule__hours');
  const hoursListMorningElement = document.querySelector('.hours__morning');
  const hoursListDayElement = document.querySelector('.hours__day');
  const hoursListEveningElement = document.querySelector('.hours__evening');

  const mobNavElement = document.querySelector('.schedule__mob-nav');

  const scheduleFragment = document.createDocumentFragment();
  const hoursFragment = document.createDocumentFragment();
  const hoursMorningFragment = document.createDocumentFragment();
  const hoursDayFragment = document.createDocumentFragment();
  const hoursEveningFragment = document.createDocumentFragment();
  const weekDaysFragment = document.createDocumentFragment();
  const activeDayFragment = document.createDocumentFragment();
  const btnFragment = document.createDocumentFragment();

  const btn = document.createElement('button');
  btn.classList = 'schedule__button';
  btn.setAttribute('type', 'button');
  btn.setAttribute('aria-label', 'Выбор дня недели');

  const activeDay = document.createElement('span');
  activeDay.classList = 'schedule__item-active';
  activeDay.innerText = nowDayWeek;

  btn.appendChild(activeDay);
  activeDayFragment.appendChild(btn);

  for (let i = 0; i < scheduleDB.length; i++) {
    const weekDayDiv = document.createElement('div');
    weekDayDiv.className = 'week-days__item';

    if (window.matchMedia('(max-width: 767px)').matches) {
      weekDayDiv.innerText = scheduleDB[i].day + ' ' + weekDaysMobDB[i];
    } else {
      weekDayDiv.innerText = scheduleDB[i].day + ' ' + weekDaysDB[i];
    }

    if (weekDaysListElement) {
      weekDaysListElement.appendChild(weekDayDiv);
    }

    let divParent = document.createElement('div');
    divParent.className = 'days';
    divParent.setAttribute('data-weekDay', scheduleDB[i].day);

    for (var j = 0; j < scheduleDB[i].lessons.length; j++) {
      // занятия
      var div = document.createElement('div');
      div.className = 'days__item';
      div.innerHTML = scheduleDB[i].lessons[j].template;
      div.setAttribute('data-hour', scheduleDB[i].lessons[j].hours);
      divParent.appendChild(div);
    }
    scheduleFragment.appendChild(divParent);
    weekDaysFragment.appendChild(weekDayDiv);
  }

  // часы
  // утро
  let hoursMorningDiv = document.createElement('div');
  hoursMorningDiv.className = 'hours__morning';

  for (let s = 0; s < hoursMorningDB.length; s++) {
    let hoursDiv = document.createElement('div');
    hoursDiv.className = 'hours__item';
    hoursDiv.innerText = hoursMorningDB[s];
    hoursDiv.setAttribute('data-hour', hoursMorningDB[s]);
    hoursMorningDiv.appendChild(hoursDiv);
    hoursMorningFragment.appendChild(hoursMorningDiv);
    hoursFragment.appendChild(hoursMorningFragment);
  }

  // день
  let hoursDayDiv = document.createElement('div');
  hoursDayDiv.className = 'hours__day';

  for (let s = 0; s < hoursDayDB.length; s++) {
    let hoursDiv = document.createElement('div');
    hoursDiv.className = 'hours__item';
    hoursDiv.innerText = hoursDayDB[s];
    hoursDiv.setAttribute('data-hour', hoursDayDB[s]);
    hoursDayDiv.appendChild(hoursDiv);
    hoursDayFragment.appendChild(hoursDayDiv);
    hoursFragment.appendChild(hoursDayFragment);
  }

  // вечер
  let hoursEveningDiv = document.createElement('div');
  hoursEveningDiv.className = 'hours__evening';

  for (let s = 0; s < hourseveningDB.length; s++) {
    let hoursDiv = document.createElement('div');
    hoursDiv.className = 'hours__item';
    hoursDiv.innerText = hourseveningDB[s];
    hoursDiv.setAttribute('data-hour', hourseveningDB[s]);
    hoursEveningDiv.appendChild(hoursDiv);
    hoursEveningFragment.appendChild(hoursEveningDiv);
    hoursFragment.appendChild(hoursEveningFragment);
  }

  if (daysListElement) {
    daysListElement.innerHTML = '';
    daysListElement.appendChild(scheduleFragment);
  }

  if (hoursListMorningElement) {
    hoursListMorningElement.innerHTML = '';
    hoursListMorningElement.appendChild(hoursMorningFragment);
  }

  if (hoursListDayElement) {
    hoursListDayElement.innerHTML = '';
    hoursListDayElement.appendChild(hoursDayFragment);
  }

  if (hoursListEveningElement) {
    hoursListEveningElement.innerHTML = '';
    hoursListEveningElement.appendChild(hoursEveningFragment);
  }

  if (hoursListElement) {
    hoursListElement.innerHTML = '';
    hoursListElement.appendChild(hoursFragment);
  }

  if (weekDaysListElement) {
    weekDaysListElement.innerHTML = '';
    weekDaysListElement.appendChild(weekDaysFragment);
  }

  if (mobNavElement) {
    mobNavElement.innerHTML = '';
    mobNavElement.appendChild(activeDayFragment);

    mobNavElement.append(btnFragment);
  }
}

const form = document.querySelector('.form-schedule');

form.addEventListener('submit', e => {
  e.preventDefault();

  schedule.classList.remove('schedule--empty');

  const btn = form
    .querySelector('[data-schedule="schedule"]')
    .getAttribute('data-schedule');

  document.getElementById(btn).scrollIntoView({
    behavior: 'smooth',
    inline: 'start',
  });
  createschedule();

  const scheduleBtn = document.querySelector('.schedule__button');
  const weekDays = document.querySelector('.week-days');
  const weekDaysItems = document.querySelectorAll('.week-days__item');
  const hoursItems = document.querySelectorAll('.hours__item');

  if (window.matchMedia('(max-width: 767px)').matches) {
    mobActiveDay(nowDayWeek);
  }

  mobWeekDays(weekDaysItems);

  if (scheduleBtn) {
    scheduleBtn.addEventListener('click', function(evt) {
      evt.preventDefault();

      mobMenuToogle();

      if (weekDays.classList.contains('week-days--open')) {
        mobWeekDays(weekDaysItems);
      }
    });
  }

  const activeHoursItem = hourText => {
    hoursItems.forEach(function(item) {
      if (item.innerText === hourText) {
        item.classList.add('hours__item--active');
      }
    });
  };

  function activeWeekDay(weekDayText) {
    weekDaysItems.forEach(function(item) {
      if (item.innerText === weekDayText) {
        item.classList.add('week-days__item--active');
        activeDay.classList.add('schedule__item-active--active');
      }
    });
  }

  function noActiveHoursItem(hourText) {
    hoursItems.forEach(function(item) {
      if (item.innerText === hourText) {
        item.classList.remove('hours__item--active');
      }
    });
  }

  function noActiveWeekDay(weekDayText) {
    weekDaysItems.forEach(function(item) {
      if (item.innerText === weekDayText) {
        item.classList.remove('week-days__item--active');
        activeDay.classList.remove('schedule__item-active--active');
      }
    });
  }

  const daysItems = document.querySelectorAll('.days__item');

  daysItems.forEach(function(item) {
    item.addEventListener('mouseover', function() {
      let hourText = item.getAttribute('data-hour');
      let weekDayText = item.parentElement.getAttribute('data-weekDay');

      activeHoursItem(hourText);

      activeWeekDay(weekDayText);

      item.classList.add('days__item--active');
    });

    item.addEventListener('mouseout', function() {
      let hourText = item.getAttribute('data-hour');
      let weekDayText = item.parentElement.getAttribute('data-weekDay');

      noActiveHoursItem(hourText);

      noActiveWeekDay(weekDayText);

      item.classList.remove('days__item--active');
    });
  });

  const popoverList = document.querySelectorAll('[data-bs-toggle="popover"]');
  const list = [...popoverList];

  list.map(el => {
    let opts = {
      html: true,
      animation: false,
      content: $('[data-name="popover-content"]'),
      container: 'body',
    };
    if (el.hasAttribute('data-bs-content-id')) {
      opts.content = document.getElementById(
        el.getAttribute('data-bs-content-id'),
      ).innerHTML;
      opts.html = true;
    }
    new bootstrap.Popover(el, opts);
  });

  const lessons = document.querySelectorAll('.lesson');
  [...lessons].map(lesson => {
    lesson.addEventListener('click', e => {
      e.preventDefault();
    });
  });
});

