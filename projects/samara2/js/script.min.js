(function() {
  // let days = document.querySelector('#days');
  // let daysLabel = document.querySelector('#label-days');
  let hoursLabel = document.querySelector('#label-hours');
  let minutesLabel = document.querySelector('#label-minutes');
  let hours = document.querySelector('#hours');
  let minutes = document.querySelector('#minutes');
  let seconds = document.querySelector('#seconds');

  // let dd = document.querySelector('#dd');
  let hh = document.querySelector('#hh');
  let mm = document.querySelector('#mm');
  let ss = document.querySelector('#ss');


  let declOfNum = function(number, titles) {
    let cases = [2, 0, 1, 1, 1, 2];
    return titles[
      number % 100 > 4 && number % 100 < 20
        ? 2
        : cases[number % 10 < 5 ? number % 10 : 5]
    ];
  };

  //declOfNum(days, ['день', 'дня', 'дней']);
  //declOfNum(hours, ['час', 'часа', 'часов']);
  //declOfNum(minutes, ['минута', 'минуты', 'минут']);
  //declOfNum(seconds, ['секунда', 'секунды', 'секунд']);

  let deadline = new Date('May 24, 2025 00:00:00').getTime();
  // console.log(deadline);

  let x = setInterval(function() {
    let now = new Date().getTime();
    let t = deadline - now;

    // let d = Math.floor(t / (1000 * 60 * 60 * 24));
    let h = Math.floor(t % (1000 * 60 * 60 * 24) / (1000 * 60 * 60));
    let m = Math.floor(t % (1000 * 60 * 60) / (1000 * 60));
    let s = Math.floor(t % (1000 * 60) / 1000);

    // days.textContent = d;
    hours.textContent = h;
    minutes.textContent = m;
    seconds.textContent = s;

    // daysLabel.textContent = declOfNum(d, ['день', 'дня', 'дней']);
    hoursLabel.textContent = declOfNum(h, ['час', 'часа', 'часов']);
    minutesLabel.textContent = declOfNum(m, ['минута', 'минуты', 'минут']);

    // dd.style.strokeDashoffset = 440 - 440 * d / 365;
    hh.style.strokeDashoffset = 440 - 440 * h / 24;
    mm.style.strokeDashoffset = 440 - 440 * m / 60;
    ss.style.strokeDashoffset = 440 - 440 * s / 60;

    if (t < 0) {
      clearInterval(x);
      // d = 0;
      h = 0;
      m = 0;
      s = 0;

      // days.textContent = d;
      hours.textContent = h;
      minutes.textContent = m;
      seconds.textContent = s;

      // dd.style.strokeDashoffset = 440 - 440 * d / 365;
      hh.style.strokeDashoffset = 440 - 440 * h / 24;
      mm.style.strokeDashoffset = 440 - 440 * m / 60;
      ss.style.strokeDashoffset = 440 - 440 * s / 60;

      // document.querySelector('.timer').style.display = 'none';
    }
  }, 100);
})();

const acc = document.getElementsByClassName("accordion");
let i;

for (i = 0; i < acc.length; i++) {
  acc[i].addEventListener("click", function() {
    this.classList.toggle("active");
    const panel = this.nextElementSibling;
    if (panel.style.display === "block") {
      panel.style.display = "none";
    } else {
      panel.style.display = "block";
    }
  });
}


function onEntry(entry) {
  entry.forEach(change => {
    if (change.isIntersecting) {
     change.target.classList.add('element-show');
    }
  });
}

let options = {
  threshold: [0.5] };
let observer = new IntersectionObserver(onEntry, options);
let elements = document.querySelectorAll('.element-animation');

for (let elm of elements) {
  observer.observe(elm);
}

const page = document.querySelector('.page');
const body = document.querySelector('.page-body');
const navigation = document.querySelector('.navigation');
const btnClose = navigation.querySelector('.btn-close');
const btnOpen = document.querySelector('.page-header__btn-menu');

navigation.addEventListener('click', e => {
  e.preventDefault();
  const elem = e.target;
  if (elem.tagName === 'A') {
    const activeId = elem.href.split('#')[1];

    document.getElementById(activeId).scrollIntoView({
      behavior: 'smooth',
      inline: 'start',
    });

    onCloseMenu();
  }
});

const onOverlayCreate = () => {
  const div = document.createElement('div');
  div.className = 'overlay';
  body.appendChild(div);
};

const onOpenMenu = () => {
  if (navigation.classList.contains('close')) {
    navigation.classList.remove('close');
  }

  navigation.classList.add('open');

  onOverlayCreate();
  page.classList.add('no-scroll');

  if (document.querySelector('.overlay')) {
    document.querySelector('.overlay').addEventListener('click', onCloseMenu);
  }
};
const onCloseMenu = () => {
  navigation.classList.remove('open');
  navigation.classList.add('close');
  document.querySelector('.overlay').remove();
  page.classList.remove('no-scroll');
};

btnClose.addEventListener('click', onCloseMenu);
btnOpen.addEventListener('click', onOpenMenu);

const handleClickEscape = e => {
  if (e.key === 'Escape') {
    onCloseMenu();
  }
};

window.addEventListener('keydown', handleClickEscape);


// Всплывающее окно при закрытии страницы
$(document).mouseleave(function(e){
  if (e.clientY < 0) {
  $("#modal-stop").modal('show');
  }
 });
 // Если окно закрыли, то удаляем его, чтобы оно больше не открывалось
 $('#modal-stop').on('hidden.bs.modal', function () {
  $("#modal-stop").remove();
 });

//  https://store.fitnesshouse.ru/testing-post.html
const BASE_URL = '/payment/order/';
// проверка ответа
const checkResponse = res => {
  if (res.ok) {
    return res.json();
  }
  return Promise.reject(`Ошибка ${res.status}`);
};

const checkSuccess = res => {
  if (res && res.success) {
    return res;
  }
  return Promise.reject(`Ответ не success: ${res}`);
};

export const generalRequest = (endpoint, options) => {
  return fetch(`${BASE_URL}${endpoint}`, options)
    .then(checkResponse)
    .then(checkSuccess);
};

const optionRequestPost = () => {
  return {
    method: 'POST',
    headers: { 'Content-Type': 'application/json' },
    body: JSON.stringify({

    }),
  };
};

// валидация формы
let forms = document.querySelectorAll('.needs-validation');

// Tooltip
new bootstrap.Tooltip(document.getElementById('tooltip14'), {
  title: 'Услуга не может быть оказана лицам моложе 14 лет',
  placement: 'right',
});

// mask
$('.mask-phone').inputmask({ mask: '+7 (999) 999-99-99' });

const checkPhone = phone => {
  let num = phone.value.replace(/[^+\d]/g, '').length;
  return num === 12;
};

const checkAge = val => {
  let today = new Date();
  let birthDate = new Date(val);
  let age = today.getFullYear() - birthDate.getFullYear();

  let m = today.getMonth() - birthDate.getMonth();
  let d = today.getDay() - birthDate.getDay();

  if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {
    age--;
  }
  if (age === 0) {
    m = 12 + m;
    if (d < 0 || (d === 0 && today.getDate() < birthDate.getDate())) {
      m--;
    }
  }
  return age >= 14;
};

document.addEventListener('DOMContentLoaded', () => {
  forms.forEach(form => {
    form.addEventListener('submit', function(e) {
      e.preventDefault();
      const club = form.querySelector('[name="price_id"]');
      let fields = form.querySelectorAll('.form-control');
      [...fields].filter(field => field.type === 'text').map(field => {
        if (
          field.value === '' ||
          club.value === '' ||
          !checkAge(form.querySelector('[type="date"]').value) ||
          !checkPhone(form.querySelector('[type="tel"]'))
        ) {
          e.preventDefault();
          form.classList.add('was-validated');
        } else {
          form.classList.remove('was-validated');
          form.submit(generalRequest(optionRequestPost));
        }
      });
    });
  });
});

const messengers = document.querySelector('.messengers');
const btn = document.querySelector('.messengers .btn-close');

if (messengers) {
  btn.addEventListener('click', () => {
    messengers.classList.add('messengers--close');
  })
}

const pageBody = document.querySelector('.page-body');

const scrollUp = 'scroll-up';
const scrollDown = 'scroll-down';
let lastScroll = 0;

window.addEventListener('scroll', () => {
  const currentScroll = window.pageYOffset;
  if (currentScroll <= 0) {
    pageBody.classList.remove(scrollUp);
    return;
  }

  if (currentScroll > lastScroll && !pageBody.classList.contains(scrollDown)) {
    // down
    pageBody.classList.remove(scrollUp);
    pageBody.classList.add(scrollDown);
  } else if (
    currentScroll < lastScroll &&
    pageBody.classList.contains(scrollDown)
  ) {
    // up
    pageBody.classList.remove(scrollDown);
    pageBody.classList.add(scrollUp);
  }
  lastScroll = currentScroll;
});

