(function () {
   // header scroll
   const body = document.body;
  //  const triggerMenu = document.querySelector(".page-header__btn-burger");

   const scrollUp = "scroll-up";
   const scrollDown = "scroll-down";
   let lastScroll = 0;

  //  triggerMenu.addEventListener("click", () => {
  //    body.classList.toggle("menu-open");
  //    triggerMenu.classList.toggle("active");
  //  });

   window.addEventListener("scroll", () => {
     const currentScroll = window.pageYOffset;
     if (currentScroll <= 0) {
       body.classList.remove(scrollUp);
       return;
     }

     if (currentScroll > lastScroll && !body.classList.contains(scrollDown)) {
       // down
       body.classList.remove(scrollUp);
       body.classList.add(scrollDown);
     } else if (currentScroll < lastScroll && body.classList.contains(scrollDown)) {
       // up
       body.classList.remove(scrollDown);
       body.classList.add(scrollUp);
     }
     lastScroll = currentScroll;
   });
})()

// mob menu

export let mobileMenuToggle = () => {
  const page = document.querySelector('.page');
  const overlay = document.querySelector('.page.page--overlay');
  const btnMenuOpen = document.querySelector('.page-header__btn-menu');
  const btnMenuOpenClose = document.querySelector('.mobile-menu__btn-close');
  const headerTop = document.querySelector('.page-header');
  const mobMenu = document.querySelector('.mobile-menu');

  if (btnMenuOpen) {
    btnMenuOpen.addEventListener('click', function() {
      headerTop.classList.add('page-header--mob');
      page.classList.add('page--overlay');
      mobMenu.classList.add('active');
    });
  }

  if (btnMenuOpenClose) {
    btnMenuOpenClose.addEventListener('click', function() {
      headerTop.classList.remove('page-header--mob');
      page.classList.remove('page--overlay');
      mobMenu.classList.remove('active');
    });
  }

  if (overlay) {
    overlay.addEventListener('click', function() {
      console.log('overlay');
      headerTop.classList.remove('page-header--mob');
      page.classList.remove('page--overlay');
      mobMenu.classList.remove('active');
    });
  }

  if (mobMenu) {
    mobMenu.addEventListener('click', e => {
      e.currentTarget.tagName === 'A'
        ? mobMenu.classList.remove('active')
        : null;
      // mobMenu.classList.remove('active');
    });
  }

  window.onresize = function() {
    if (window.screen.width > 768) {
      document.querySelector('.page').classList.remove('page--overlay');
      if (headerTop.classList.contains('page-header--mob')) {
        headerTop.classList.remove('page-header--mob');
      }
    }
  };
};

mobileMenuToggle();

// расписание

const templateLesson = lesson => {
  return (
    `<div class="lesson ` + lesson.dopClass +`" data-type="` + lesson.type +`" data-bs-content-id="popover-content-`+ lesson.number +`">
      <div class="lesson__wrapper">
        <div class="lesson__name" data-bs-content-id="popover-content-`+ lesson.number +`" tabindex="0" role="button" data-bs-toggle="popover" data-bs-placement="bottom" data-bs-trigger="focus">` + lesson.name +`</div>
        <div class="lesson__trainer">
          <span>` + lesson.trainer +`</span>
        </div>
        <div class="lesson__place">
          <span>` + lesson.place +`</span>
        </div>
        <div class="d-none lesson__popover" id="popover-content-`+ lesson.number +`">
          <div tabindex="1" class="lesson__popover-close"  aria-label="Закрыть окно с информацией об уроке">
          </div>
          <h4 class="title">` + lesson.title +`</h4>
          <div class="text">` + lesson.content +`</div>
          <a class="lesson__link link-text link-text--more" href=` + lesson.url +`>
            <span>Информация о тренере</span>
          </a>
        </div>
      </div>
    </div>`
  );
};

export const weekDaysDB = ['Пн', 'Вт', 'Ср', 'Чт', 'Пт', 'Сб', 'Вс'];
export const weekDaysMobDB = [
  'Понедельник',
  'Вторник',
  'Среда',
  'Четверг',
  'Пятница',
  'Суббота',
  'Воскресенье',
];
const nowWeekDaysMobDB = [
  'Воскресенье',
  'Понедельник',
  'Вторник',
  'Среда',
  'Четверг',
  'Пятница',
  'Суббота',
];

export const nowWeekDaysDB = [
  '31.07',
  '01.08',
  '02.08',
  '03.08',
  '04.08',
  '05.08',
  '06.08',
];

const hoursMorningDB = ['09:00', '10:00', '11:00', '11:00', '11:00'];
const hoursDayDB = [
  '12:00',
  '12:00',
  '12:00',
  '13:00',
  '13:00',
  '13:00',
  '13:00',
  '14:00',
  '14:00',
  '14:00',
  '15:00',
  '15:00',
  '16:00',
];
const hourseveningDB = [
  '17:00',
  '17:00',
  '17:00',
  '17:00',
  '17:00',
  '18:00',
  '18:00',
  '18:00',
  '19:00',
  '19:00',
  '19:00',
  '19:00',
  '19:00',
  '20:00',
  '20:00',
  '20:00',
  '20:00',
  '21:00',
  '21:00',
  '21:00',
];

const hoursAllDB = [...hoursMorningDB, ...hoursDayDB, ...hourseveningDB];

const placesDB = [
  'Большой зал',
  'Малый зал',
  'Большой бассейн',
  'Детский бассейн',
  'Тренажерный зал',
];
const trainersDB = [
  '',
  'Пильгун Юлия',
  'Марченко Виталий',
  'Мальцева Мария',
  'Сорокина Татьяна',
  'Исмагилова Альбина',
  'Бодрый Даниил',
  'Чистякова Юлия',
  'Жукова Анжелика',
  'Орлова Анастасия',
  'Томинг Сергей',
  'Миронова Алина',
  'Александрова Наталья',
  'Тихомирова Татьяна',
  'Кушнерчук Татьяна',
  'Рыняк Ольга',
  'Смолин Дмитрий',
  'Буйволов Сергей',
  'Кушова Елена',
];

const LessonsGroup = [
  'Водный комплекс',
  'Групповые занятия',
  'Детские секции «Вода»',
  'Детские секции «Вода»',
];

const lessonsDB = [
  {
    type: LessonsGroup[1],
    dopClass: '',
    name: 'Body Sculpt',
    content:
      'Вид силовой тренировки, направленный на развитие основных мышечных групп, силовой выносливости и формирование мышечного рельефа. Во время тренировки используются различные виды силового оборудования: отягощения разных весов, амортизаторы, выбор которых зависит от уровня вашей подготовленности. Рекомендуется для любого уровня подготовленности, продолжительность занятия - 55 минут.',
  },
  {
    type: LessonsGroup[1],
    dopClass: '',
    name: 'Flex',
    content:
      'Внимание! Посещение урока возможно только в спортивной обуви или в носках. Комплекс упражнений направленный на растяжку и релаксацию. Подобные регулярные групповые тренировки помогут повысить тонус мышц, улучшить координацию, восстановить осанку, сделать движения пластичными. Рекомендуется для любого уровня подготовленности. Продолжительность занятий составляет 55 минут. Внимание! Посещение урока возможно только в спортивной обуви или в носках. Комплекс упражнений направленный на растяжку и релаксацию. Подобные регулярные групповые тренировки помогут повысить тонус мышц, улучшить координацию, восстановить осанку, сделать движения пластичными. Рекомендуется для любого уровня подготовленности. Продолжительность занятий составляет 55 минут.',
  },
  {
    type: LessonsGroup[1],
    dopClass: 'lesson--pay',
    name: 'BSA + (100р.)',
    content:
      'Cиловая тренировка для проработки мышц ягодиц, дельтовидных и брюшного пресса с использованием дополнительного оборудования. Выбор нагрузки зависит от уровня подготовки: можно тренироваться с собственным весом или со спортивными снарядами. В отличие от стандартных уроков BSA, на этом классе инструктор может включить дополнительные упражнения с ориентиром на тех, кто пришел на тренировку. Для любого уровня подготовки. Групповой коммерческий класс.',
  },
  {
    type: LessonsGroup[1],
    dopClass: '',
    name: 'Latina Dance',
    content:
      'Групповой аэробный класс, направленный на развитие координации, гибкости, пластичности и выносливости. Основная часть класса - это разучивание танцевальной комбинации, либо хореографии, одного из латиноамериканских танцев: Samba, Cha-Cha-Cha, Salsa, Bachata, Rumba, Jive и другие. Занятия на данном классе заряжают солнечной энергией Латинской Америки и дарят позитивное настроение. Для посещения класса подойдет обычная спортивная обувь. Рекомендуется для любого уровня подготовленности. Продолжительность тренировки составляет 55 минут.',
  },
  {
    type: LessonsGroup[1],
    dopClass: '',
    name: 'Fit Ball',
    content:
      'Групповое занятие, состоящее из комплекса силовых упражнений на проработку всех мышечных групп с использованием специального оборудования fit ball. Тренировка отлично тренирует дыхательную систему, вестибулярный аппарат, укрепляет мышцы всего тела и улучшает координацию движений, формирует правильную осанку. Рекомендуется для любого уровня подготовленности, продолжительность 55 минут.',
  },
  {
    type: LessonsGroup[1],
    dopClass: 'lesson--pay',
    name: 'Dance Mix + (100р.)',
    content:
      'Аэробный класс разовьет гибкость, координацию, выносливость, пластичность и чувство ритма. На тренировке вы разучите движения современных танцевальных направлений. Для любого уровня подготовки. Групповой коммерческий класс.',
  },
  {
    type: LessonsGroup[1],
    dopClass: '',
    name: 'Суставная Гимнастика',
    content:
      'Внимание! Посещение урока возможно только в спортивной обуви или в носках. Комплекс упражнений, направленных на тренировку мышц и суставов тела. Специальные упражнения способствует улучшению координации движений и подвижности суставов, развитию гибкости позвоночника, укреплению опорно-связочного аппарата. Рекомендуется для любого уровня подготовленности. Продолжительность составляет 55 минут.',
  },
  {
    type: LessonsGroup[0],
    dopClass: 'lesson--pool',
    name: 'Noodles',
    content:
      'Комбинированный класс с элементами классической аквааэробики и Aqua Noodles для тренировки мышц рук, ног, пресса и спины, развития выносливости и гибкости. Для среднего уровня подготовленности. Продолжительность - 45 минут.',
  },
  {
    type: LessonsGroup[0],
    dopClass: 'lesson--pool',
    name: 'СЕКЦИЯ "Школа плавания ДЕНЬ 14" 7-8 лет',
  },
  {
    type: LessonsGroup[3],
    dopClass: '',
    name: 'СЕКЦИЯ "Бодибилдинг для мальчиков" (9-11 лет)',
  },
  {
    type: LessonsGroup[2],
    dopClass: 'lesson--pool',
    name: 'СЕКЦИЯ "Школа плавания 9" 11-13 лет',
  },
  {
    type: LessonsGroup[2],
    dopClass: '',
    name: 'СЕКЦИЯ "ГТО и ОФП" (9-13 лет)',
  },
  {
    type: LessonsGroup[0],
    dopClass: 'lesson--pool',
    name: 'СЕКЦИЯ "Дельфины 5" 5-6 лет',
  },
  {
    type: LessonsGroup[1],
    dopClass: '',
    name: 'Upper Body',
    content:
      'Силовой аэробный класс, состоящий из комплекса силовых упражнений, направленных на развитие и проработку мышц плечевого пояса, рук, груди, мышц спины и мышц брюшного пресса с использованием дополнительного оборудования. Класс рекомендован для любого уровня подготовленности, продолжительность занятия - 55 минут.',
  },
  {
    type: LessonsGroup[0],
    dopClass: 'lesson--pool',
    name: 'СЕКЦИЯ "Школа плавания 5" 8-9 лет',
  },
  {
    type: LessonsGroup[1],
    dopClass: 'lesson--pay',
    name: 'Lower body + (100р.)',
    content:
      'Силовая тренировка для проработки мышц ног, ягодиц и брюшного пресса при помощи дополнительного оборудования. Выбор нагрузки зависит от уровня подготовки: можно тренироваться с собственным весом или использовать спортивные снаряды. В отличие от стандартных уроков Lower Body, на этом классе инструктор может включить дополнительные упражнения с ориентиром на тех, кто пришел на тренировку.',
  },
  {
    type: LessonsGroup[0],
    dopClass: 'lesson--pool',
    name: 'СЕКЦИЯ "Дельфины 7" 5-6 лет',
  },
  {
    type: LessonsGroup[0],
    dopClass: 'lesson--pool',
    name: 'СЕКЦИЯ "Школа плавания 6 " 9-10 лет',
  },
  {
    type: LessonsGroup[0],
    dopClass: 'lesson--pool',
    name: 'СЕКЦИЯ "Школа плавания 12 " 11-13 лет',
  },
  {
    type: LessonsGroup[1],
    dopClass: 'lesson--pay',
    name: 'Fitness Yoga + (100р.)',
    content:
      'Занятие повышает тонус мышц, улучшает работу внутренних органов и циркуляцию крови. Прорабатываются глубокие мышцы, сухожилия и связки, расслабляются зажатые мышцы спины и шейных позвонков. Для любого уровня подготовки. Групповой коммерческий класс.',
  },
  {
    type: LessonsGroup[1],
    dopClass: '',
    name: 'Belly Dance',
    content:
      'Групповой аэробный класс, направленный на развитие координации, гибкости и пластичности. Основная часть класса - это разучивание танцевальной комбинации, либо хореографии в одном из стилей восточного танца. Занятия оказывают благоприятное воздействие на сердечно-сосудистую систему и улучшают кровоснабжение. Рекомендуется для любого уровня подготовленности. Продолжительность тренировки составляет 55 минут.',
  },
  {
    type: LessonsGroup[0],
    dopClass: 'lesson--pool',
    name: 'Dumbbells',
    content:
      'Урок, направленный на развитие силовой выносливости мышц рук, спины, груди и пресса. Занятие для среднего и высокого уровней подготовленности. Продолжительность - 40 минут.',
  },
];

const maxLengthStr = (str, count) => {
  let newStr =
    str.length > count ? str.slice(0, count).trim() + '...' : str.trim();
  return newStr;
};

const createLesson = (k, j, h = j) => {
  return templateLesson({
    type: lessonsDB[k].type,
    dopClass: lessonsDB[k].dopClass,
    title: lessonsDB[k].name,
    name: lessonsDB[k].name,
    content: lessonsDB[k].content,
    trainer: trainersDB[h],
    place: placesDB[j],
    url: 'index.html',
    number: k,
  });
};

const getDayWeek = item => {
  if (window.matchMedia('(max-width: 767px)').matches) {
    return item.mobile;
  } else {
    return item.desctop;
  }
};

const scheduleDB = [
  {
    day: nowWeekDaysDB[0],
    lessons: [
      {
        hours: hoursAllDB[0],
        template: createLesson(0, 0, 1),
      },
      {
        hours: hoursAllDB[1],
        template: createLesson(1, 0, 1),
      },
      {
        hours: hoursAllDB[2],
        template: createLesson(2, 0, 1),
      },
      {
        hours: hoursAllDB[3],
        template: '',
      },
      {
        hours: hoursAllDB[4],
        template: '',
      },
      {
        hours: hoursAllDB[5],
        template: createLesson(3, 1, 1),
      },
      {
        hours: hoursAllDB[6],
        template: createLesson(4, 2, 2),
      },
      {
        hours: hoursAllDB[7],
        template: '',
      },
      {
        hours: hoursAllDB[8],
        template: createLesson(5, 1, 2),
      },
      {
        hours: hoursAllDB[9],
        template: createLesson(6, 2, 1),
      },
      {
        hours: hoursAllDB[10],
        template: '',
      },
      {
        hours: hoursAllDB[11],
        template: '',
      },
      {
        hours: hoursAllDB[12],
        template: createLesson(7, 2, 3),
      },
      {
        hours: hoursAllDB[13],
        template: '',
      },
      {
        hours: hoursAllDB[14],
        template: '',
      },
      {
        hours: hoursAllDB[15],
        template: '',
      },
      {
        hours: hoursAllDB[16],
        template: '',
      },
      {
        hours: hoursAllDB[17],
        template: createLesson(8, 2, 6),
      },
      {
        hours: hoursAllDB[18],
        template: createLesson(9, 4, 0),
      },
      {
        hours: hoursAllDB[19],
        template: createLesson(10, 2, 5),
      },
      {
        hours: hoursAllDB[20],
        template: createLesson(11, 4, 6),
      },
      {
        hours: hoursAllDB[21],
        template: '',
      },
      {
        hours: hoursAllDB[22],
        template: '',
      },
      {
        hours: hoursAllDB[23],
        template: createLesson(12, 4, 6),
      },
      {
        hours: hoursAllDB[24],
        template: createLesson(13, 4, 6),
      },
      {
        hours: hoursAllDB[25],
        template: createLesson(14, 4, 6),
      },
      {
        hours: hoursAllDB[26],
        template: createLesson(15, 3, 6),
      },
      {
        hours: hoursAllDB[27],
        template: createLesson(16, 4, 6),
      },
      {
        hours: hoursAllDB[28],
        template: createLesson(17, 2, 6),
      },
      {
        hours: hoursAllDB[29],
        template: '',
      },
      {
        hours: hoursAllDB[30],
        template: '',
      },
      {
        hours: hoursAllDB[31],
        template: createLesson(18, 2, 6),
      },
      {
        hours: hoursAllDB[32],
        template: createLesson(19, 1, 6),
      },
      {
        hours: hoursAllDB[33],
        template: createLesson(20, 1, 1),
      },
      {
        hours: hoursAllDB[34],
        template: '',
      },
      {
        hours: hoursAllDB[35],
        template: createLesson(1, 1, 8),
      },
      {
        hours: hoursAllDB[36],
        template: createLesson(21, 3, 3),
      },
      {
        hours: hoursAllDB[37],
        template: createLesson(19, 1, 9),
      },
    ],
  },
  {
    day: nowWeekDaysDB[1],
    lessons: [
      {
        hours: hoursAllDB[0],
        template: '',
      },
      {
        hours: hoursAllDB[1],
        template: '',
      },
      {
        hours: hoursAllDB[2],
        template: createLesson(2, 0, 1),
      },
      {
        hours: hoursAllDB[3],
        template: '',
      },
      {
        hours: hoursAllDB[4],
        template: createLesson(0, 0, 1),
      },
      {
        hours: hoursAllDB[5],
        template: createLesson(3, 1, 1),
      },
      {
        hours: hoursAllDB[6],
        template: createLesson(4, 2, 2),
      },
      {
        hours: hoursAllDB[7],
        template: '',
      },
      {
        hours: hoursAllDB[8],
        template: createLesson(5, 1, 2),
      },
      {
        hours: hoursAllDB[9],
        template: createLesson(6, 2, 1),
      },
      {
        hours: hoursAllDB[10],
        template: '',
      },
      {
        hours: hoursAllDB[11],
        template: createLesson(1, 0, 1),
      },
      {
        hours: hoursAllDB[12],
        template: createLesson(4, 2, 3),
      },
      {
        hours: hoursAllDB[13],
        template: createLesson(10, 2, 5),
      },
      {
        hours: hoursAllDB[14],
        template: createLesson(9, 1, 8),
      },
      {
        hours: hoursAllDB[15],
        template: createLesson(8, 2, 4),
      },
      {
        hours: hoursAllDB[16],
        template: '',
      },
      {
        hours: hoursAllDB[17],
        template: '',
      },
      {
        hours: hoursAllDB[18],
        template: createLesson(9, 4, 0),
      },
      {
        hours: hoursAllDB[19],
        template: '',
      },
      {
        hours: hoursAllDB[20],
        template: createLesson(11, 4, 6),
      },
      {
        hours: hoursAllDB[21],
        template: createLesson(17, 2, 6),
      },
      {
        hours: hoursAllDB[22],
        template: '',
      },
      {
        hours: hoursAllDB[23],
        template: createLesson(12, 4, 6),
      },
      {
        hours: hoursAllDB[24],
        template: createLesson(13, 4, 6),
      },
      {
        hours: hoursAllDB[25],
        template: createLesson(14, 4, 6),
      },
      {
        hours: hoursAllDB[26],
        template: createLesson(15, 3, 6),
      },
      {
        hours: hoursAllDB[27],
        template: createLesson(16, 4, 6),
      },
      {
        hours: hoursAllDB[28],
        template: '',
      },
      {
        hours: hoursAllDB[29],
        template: createLesson(19, 1, 9),
      },
      {
        hours: hoursAllDB[30],
        template: createLesson(21, 3, 3),
      },
      {
        hours: hoursAllDB[31],
        template: createLesson(18, 2, 6),
      },
      {
        hours: hoursAllDB[32],
        template: createLesson(19, 1, 6),
      },
      {
        hours: hoursAllDB[33],
        template: createLesson(20, 1, 1),
      },
      {
        hours: hoursAllDB[34],
        template: '',
      },
      {
        hours: hoursAllDB[35],
        template: createLesson(5, 1, 8),
      },
      {
        hours: hoursAllDB[36],
        template: '',
      },
      {
        hours: hoursAllDB[37],
        template: '',
      },
    ],
  },
  {
    day: nowWeekDaysDB[2],
    lessons: [
      {
        hours: hoursAllDB[0],
        template: createLesson(10, 2, 5),
      },
      {
        hours: hoursAllDB[1],
        template: createLesson(7, 0, 1),
      },
      {
        hours: hoursAllDB[2],
        template: createLesson(4, 0, 1),
      },
      {
        hours: hoursAllDB[3],
        template: '',
      },
      {
        hours: hoursAllDB[4],
        template: createLesson(4, 4, 6),
      },
      {
        hours: hoursAllDB[5],
        template: '',
      },
      {
        hours: hoursAllDB[6],
        template: createLesson(16, 2, 2),
      },
      {
        hours: hoursAllDB[7],
        template: createLesson(17, 2, 4),
      },
      {
        hours: hoursAllDB[8],
        template: '',
      },
      {
        hours: hoursAllDB[9],
        template: createLesson(20, 1, 1),
      },
      {
        hours: hoursAllDB[10],
        template: '',
      },
      {
        hours: hoursAllDB[11],
        template: '',
      },
      {
        hours: hoursAllDB[12],
        template: createLesson(7, 2, 3),
      },
      {
        hours: hoursAllDB[13],
        template: '',
      },
      {
        hours: hoursAllDB[14],
        template: '',
      },
      {
        hours: hoursAllDB[15],
        template: '',
      },
      {
        hours: hoursAllDB[16],
        template: '',
      },
      {
        hours: hoursAllDB[17],
        template: createLesson(8, 2, 6),
      },
      {
        hours: hoursAllDB[18],
        template: createLesson(9, 4, 0),
      },
      {
        hours: hoursAllDB[19],
        template: '',
      },
      {
        hours: hoursAllDB[20],
        template: createLesson(20, 1, 1),
      },
      {
        hours: hoursAllDB[21],
        template: '',
      },
      {
        hours: hoursAllDB[22],
        template: createLesson(19, 1, 9),
      },
      {
        hours: hoursAllDB[23],
        template: '',
      },
      {
        hours: hoursAllDB[24],
        template: createLesson(17, 4, 6),
      },
      {
        hours: hoursAllDB[25],
        template: '',
      },
      {
        hours: hoursAllDB[26],
        template: createLesson(15, 3, 6),
      },
      {
        hours: hoursAllDB[27],
        template: createLesson(9, 4, 6),
      },
      {
        hours: hoursAllDB[28],
        template: createLesson(7, 2, 6),
      },
      {
        hours: hoursAllDB[29],
        template: '',
      },
      {
        hours: hoursAllDB[30],
        template: '',
      },
      {
        hours: hoursAllDB[31],
        template: createLesson(18, 2, 6),
      },
      {
        hours: hoursAllDB[32],
        template: createLesson(19, 1, 6),
      },
      {
        hours: hoursAllDB[33],
        template: '',
      },
      {
        hours: hoursAllDB[34],
        template: '',
      },
      {
        hours: hoursAllDB[35],
        template: createLesson(1, 1, 8),
      },
      {
        hours: hoursAllDB[36],
        template: createLesson(21, 3, 3),
      },
      {
        hours: hoursAllDB[37],
        template: '',
      },
    ],
  },
  {
    day: nowWeekDaysDB[3],
    lessons: [
      {
        hours: hoursAllDB[0],
        template: createLesson(2, 0, 1),
      },
      {
        hours: hoursAllDB[1],
        template: createLesson(3, 0, 1),
      },
      {
        hours: hoursAllDB[2],
        template: '',
      },
      {
        hours: hoursAllDB[3],
        template: '',
      },
      {
        hours: hoursAllDB[4],
        template: createLesson(6, 0, 1),
      },
      {
        hours: hoursAllDB[5],
        template: createLesson(5, 1, 1),
      },
      {
        hours: hoursAllDB[6],
        template: createLesson(14, 2, 2),
      },
      {
        hours: hoursAllDB[7],
        template: '',
      },
      {
        hours: hoursAllDB[8],
        template: '',
      },
      {
        hours: hoursAllDB[9],
        template: createLesson(16, 2, 1),
      },
      {
        hours: hoursAllDB[10],
        template: '',
      },
      {
        hours: hoursAllDB[11],
        template: createLesson(2, 0, 1),
      },
      {
        hours: hoursAllDB[12],
        template: createLesson(17, 2, 3),
      },
      {
        hours: hoursAllDB[13],
        template: '',
      },
      {
        hours: hoursAllDB[14],
        template: createLesson(13, 2, 3),
      },
      {
        hours: hoursAllDB[15],
        template: createLesson(12, 0, 1),
      },
      {
        hours: hoursAllDB[16],
        template: createLesson(20, 4, 0),
      },
      {
        hours: hoursAllDB[17],
        template: createLesson(8, 2, 6),
      },
      {
        hours: hoursAllDB[18],
        template: '',
      },
      {
        hours: hoursAllDB[19],
        template: createLesson(20, 2, 5),
      },
      {
        hours: hoursAllDB[20],
        template: createLesson(11, 4, 9),
      },
      {
        hours: hoursAllDB[21],
        template: '',
      },
      {
        hours: hoursAllDB[22],
        template: '',
      },
      {
        hours: hoursAllDB[23],
        template: createLesson(12, 4, 6),
      },
      {
        hours: hoursAllDB[24],
        template: createLesson(1, 4, 6),
      },
      {
        hours: hoursAllDB[25],
        template: createLesson(14, 4, 6),
      },
      {
        hours: hoursAllDB[26],
        template: '',
      },
      {
        hours: hoursAllDB[27],
        template: createLesson(16, 4, 6),
      },
      {
        hours: hoursAllDB[28],
        template: createLesson(17, 2, 6),
      },
      {
        hours: hoursAllDB[29],
        template: '',
      },
      {
        hours: hoursAllDB[30],
        template: '',
      },
      {
        hours: hoursAllDB[31],
        template: '',
      },
      {
        hours: hoursAllDB[32],
        template: createLesson(9, 1, 6),
      },
      {
        hours: hoursAllDB[33],
        template: createLesson(2, 1, 1),
      },
      {
        hours: hoursAllDB[34],
        template: createLesson(12, 1, 8),
      },
      {
        hours: hoursAllDB[35],
        template: createLesson(11, 1, 8),
      },
      {
        hours: hoursAllDB[36],
        template: createLesson(15, 3, 3),
      },
      {
        hours: hoursAllDB[37],
        template: '',
      },
    ],
  },
  {
    day: nowWeekDaysDB[4],
    lessons: [
      {
        hours: hoursAllDB[0],
        template: createLesson(0, 0, 1),
      },
      {
        hours: hoursAllDB[1],
        template: createLesson(1, 0, 1),
      },
      {
        hours: hoursAllDB[2],
        template: createLesson(2, 0, 1),
      },
      {
        hours: hoursAllDB[3],
        template: '',
      },
      {
        hours: hoursAllDB[4],
        template: '',
      },
      {
        hours: hoursAllDB[5],
        template: createLesson(3, 1, 1),
      },
      {
        hours: hoursAllDB[6],
        template: createLesson(4, 2, 2),
      },
      {
        hours: hoursAllDB[7],
        template: '',
      },
      {
        hours: hoursAllDB[8],
        template: createLesson(5, 1, 2),
      },
      {
        hours: hoursAllDB[9],
        template: createLesson(6, 2, 1),
      },
      {
        hours: hoursAllDB[10],
        template: '',
      },
      {
        hours: hoursAllDB[11],
        template: '',
      },
      {
        hours: hoursAllDB[12],
        template: createLesson(7, 2, 3),
      },
      {
        hours: hoursAllDB[13],
        template: '',
      },
      {
        hours: hoursAllDB[14],
        template: '',
      },
      {
        hours: hoursAllDB[15],
        template: '',
      },
      {
        hours: hoursAllDB[16],
        template: '',
      },
      {
        hours: hoursAllDB[17],
        template: createLesson(8, 2, 6),
      },
      {
        hours: hoursAllDB[18],
        template: createLesson(9, 4, 0),
      },
      {
        hours: hoursAllDB[19],
        template: createLesson(10, 2, 5),
      },
      {
        hours: hoursAllDB[20],
        template: createLesson(11, 4, 6),
      },
      {
        hours: hoursAllDB[21],
        template: '',
      },
      {
        hours: hoursAllDB[22],
        template: '',
      },
      {
        hours: hoursAllDB[23],
        template: createLesson(12, 4, 6),
      },
      {
        hours: hoursAllDB[24],
        template: createLesson(13, 4, 6),
      },
      {
        hours: hoursAllDB[25],
        template: createLesson(14, 4, 6),
      },
      {
        hours: hoursAllDB[26],
        template: createLesson(15, 3, 6),
      },
      {
        hours: hoursAllDB[27],
        template: createLesson(16, 4, 6),
      },
      {
        hours: hoursAllDB[28],
        template: createLesson(17, 2, 6),
      },
      {
        hours: hoursAllDB[29],
        template: '',
      },
      {
        hours: hoursAllDB[30],
        template: '',
      },
      {
        hours: hoursAllDB[31],
        template: createLesson(18, 2, 6),
      },
      {
        hours: hoursAllDB[32],
        template: createLesson(19, 1, 6),
      },
      {
        hours: hoursAllDB[33],
        template: createLesson(20, 1, 1),
      },
      {
        hours: hoursAllDB[34],
        template: '',
      },
      {
        hours: hoursAllDB[35],
        template: createLesson(1, 1, 8),
      },
      {
        hours: hoursAllDB[36],
        template: createLesson(21, 3, 3),
      },
      {
        hours: hoursAllDB[37],
        template: createLesson(19, 1, 9),
      },
    ],
  },
  {
    day: nowWeekDaysDB[5],
    lessons: [
      {
        hours: hoursAllDB[0],
        template: '',
      },
      {
        hours: hoursAllDB[1],
        template: '',
      },
      {
        hours: hoursAllDB[2],
        template: '',
      },
      {
        hours: hoursAllDB[3],
        template: '',
      },
      {
        hours: hoursAllDB[4],
        template: createLesson(3, 1, 1),
      },
      {
        hours: hoursAllDB[5],
        template: createLesson(4, 2, 2),
      },
      {
        hours: hoursAllDB[6],
        template: '',
      },
      {
        hours: hoursAllDB[7],
        template: '',
      },
      {
        hours: hoursAllDB[8],
        template: '',
      },
      {
        hours: hoursAllDB[9],
        template: '',
      },
      {
        hours: hoursAllDB[10],
        template: '',
      },
      {
        hours: hoursAllDB[11],
        template: '',
      },
      {
        hours: hoursAllDB[12],
        template: createLesson(7, 2, 3),
      },
      {
        hours: hoursAllDB[13],
        template: createLesson(6, 2, 1),
      },
      {
        hours: hoursAllDB[14],
        template: '',
      },
      {
        hours: hoursAllDB[15],
        template: '',
      },
      {
        hours: hoursAllDB[16],
        template: '',
      },
      {
        hours: hoursAllDB[17],
        template: createLesson(18, 2, 6),
      },
      {
        hours: hoursAllDB[18],
        template: createLesson(19, 4, 0),
      },
      {
        hours: hoursAllDB[19],
        template: '',
      },
      {
        hours: hoursAllDB[20],
        template: '',
      },
      {
        hours: hoursAllDB[21],
        template: '',
      },
      {
        hours: hoursAllDB[22],
        template: '',
      },
      {
        hours: hoursAllDB[23],
        template: createLesson(17, 4, 6),
      },
      {
        hours: hoursAllDB[24],
        template: createLesson(18, 4, 6),
      },
      {
        hours: hoursAllDB[25],
        template: createLesson(19, 4, 6),
      },
      {
        hours: hoursAllDB[26],
        template: '',
      },
      {
        hours: hoursAllDB[27],
        template: '',
      },
      {
        hours: hoursAllDB[28],
        template: '',
      },
      {
        hours: hoursAllDB[29],
        template: '',
      },
      {
        hours: hoursAllDB[30],
        template: '',
      },
      {
        hours: hoursAllDB[31],
        template: createLesson(18, 2, 6),
      },
      {
        hours: hoursAllDB[32],
        template: '',
      },
      {
        hours: hoursAllDB[33],
        template: createLesson(20, 1, 1),
      },
      {
        hours: hoursAllDB[34],
        template: '',
      },
      {
        hours: hoursAllDB[35],
        template: '',
      },
      {
        hours: hoursAllDB[36],
        template: '',
      },
      {
        hours: hoursAllDB[37],
        template: '',
      },
    ],
  },
  {
    day: nowWeekDaysDB[6],
    lessons: [
      {
        hours: hoursAllDB[0],
        template: '',
      },
      {
        hours: hoursAllDB[1],
        template: '',
      },
      {
        hours: hoursAllDB[2],
        template: createLesson(13, 4, 6),
      },
      {
        hours: hoursAllDB[3],
        template: createLesson(2, 0, 1),
      },
      {
        hours: hoursAllDB[4],
        template: createLesson(3, 1, 1),
      },
      {
        hours: hoursAllDB[5],
        template: '',
      },
      {
        hours: hoursAllDB[6],
        template: createLesson(4, 2, 2),
      },
      {
        hours: hoursAllDB[7],
        template: '',
      },
      {
        hours: hoursAllDB[8],
        template: '',
      },
      {
        hours: hoursAllDB[9],
        template: '',
      },
      {
        hours: hoursAllDB[10],
        template: '',
      },
      {
        hours: hoursAllDB[11],
        template: '',
      },
      {
        hours: hoursAllDB[12],
        template: createLesson(7, 2, 3),
      },
      {
        hours: hoursAllDB[13],
        template: '',
      },
      {
        hours: hoursAllDB[14],
        template: createLesson(15, 3, 6),
      },
      {
        hours: hoursAllDB[15],
        template: '',
      },
      {
        hours: hoursAllDB[16],
        template: '',
      },
      {
        hours: hoursAllDB[17],
        template: createLesson(8, 2, 6),
      },
      {
        hours: hoursAllDB[18],
        template: createLesson(9, 4, 0),
      },
      {
        hours: hoursAllDB[19],
        template: '',
      },
      {
        hours: hoursAllDB[20],
        template: createLesson(11, 4, 6),
      },
      {
        hours: hoursAllDB[21],
        template: '',
      },
      {
        hours: hoursAllDB[22],
        template: '',
      },
      {
        hours: hoursAllDB[23],
        template: createLesson(12, 4, 6),
      },
      {
        hours: hoursAllDB[24],
        template: '',
      },
      {
        hours: hoursAllDB[25],
        template: createLesson(14, 4, 6),
      },
      {
        hours: hoursAllDB[26],
        template: '',
      },
      {
        hours: hoursAllDB[27],
        template: createLesson(16, 4, 6),
      },
      {
        hours: hoursAllDB[28],
        template: createLesson(17, 2, 6),
      },
      {
        hours: hoursAllDB[29],
        template: '',
      },
      {
        hours: hoursAllDB[30],
        template: '',
      },
      {
        hours: hoursAllDB[31],
        template: createLesson(18, 2, 6),
      },
      {
        hours: hoursAllDB[32],
        template: '',
      },
      {
        hours: hoursAllDB[33],
        template: '',
      },
      {
        hours: hoursAllDB[34],
        template: '',
      },
      {
        hours: hoursAllDB[35],
        template: '',
      },
      {
        hours: hoursAllDB[36],
        template: '',
      },
      {
        hours: hoursAllDB[37],
        template: '',
      },
    ],
  },
];

const addscheduleDBID = () => {
  for (let j = 0; j < scheduleDB.length; j++) {
    for (let i = 0; i < scheduleDB[j].lessons.length; i++) {
      scheduleDB[j].lessons[i].id = j + '_' + i;
    }
  }
};

addscheduleDBID();

// console.log(createArrayScheduleDB()[0]);
// console.log(scheduleDB[0]);

export const scheduleEmpty = `
<div class="schedule__inner">
  <div class="schedule__hours hours">
    <div class="hours__morning">
      <div class="hours__item" data-hour="09:00">09:00</div>
      <div class="hours__item" data-hour="10:00">10:00</div>
      <div class="hours__item" data-hour="11:00">11:00</div>
    </div>
    <div class="hours__day">
      <div class="hours__item" data-hour="12:00">12:00</div>
      <div class="hours__item" data-hour="13:00">13:00</div>
      <div class="hours__item d-flex d-sm-none" data-hour="14:00">14:00</div>
      <div class="hours__item d-flex d-sm-none" data-hour="15:00">15:00</div>
    </div>
    <div class="hours__evening">
      <div class="hours__item d-flex d-sm-none" data-hour="16:00">16:00</div>
      <div class="hours__item d-flex d-sm-none" data-hour="17:00">17:00</div>
      <div class="hours__item d-flex d-sm-none" data-hour="18:00">18:00</div>
      <div class="hours__item d-flex d-sm-none" data-hour="19:00">19:00</div>
      <div class="hours__item d-flex d-sm-none" data-hour="20:00">20:00</div>
      <div class="hours__item d-flex d-sm-none" data-hour="21:00">21:00</div>
    </div>
  </div>
  <div class="schedule__week" id="scroll-wrapper">
    <div class="schedule__mob-nav">
      <button class="schedule__button" type="button" aria-label="Выбор дня недели"><span class="schedule__item-active">` + nowWeekDaysDB[0] +` Понедельник</span>
                  <svg class="icon" width="14" height="8" viewBox="0 0 14 8">
                    <use xlink:href="img/sprite.svg#arrow-down"></use>
                  </svg>
      </button>
    </div>
    <div class="schedule__week-days week-days"><div class="week-days__item">` + nowWeekDaysDB[0] +` Понедельник</div><div class="week-days__item">` + nowWeekDaysDB[1] +` Вторник</div><div class="week-days__item">` + nowWeekDaysDB[2] +` Среда</div><div class="week-days__item">` + nowWeekDaysDB[3] +` Четверг</div><div class="week-days__item">` + nowWeekDaysDB[4] +` Пятница</div><div class="week-days__item">` + nowWeekDaysDB[5] +` Суббота</div><div class="week-days__item">` + nowWeekDaysDB[6] +` Воскресенье</div></div>
    <div class="schedule__days">
      <div class="days days--active" data-weekday="` + nowWeekDaysDB[0] +`">
        <div class="days__item" data-hour="09:00"></div>
        <div class="days__item" data-hour="10:00"></div>
        <div class="days__item" data-hour="11:00"></div>
        <div class="days__item" data-hour="12:00"></div>
        <div class="days__item" data-hour="13:00"></div>
        <div class="days__item d-flex d-sm-none" data-hour="14:00"></div>
        <div class="days__item d-flex d-sm-none" data-hour="15:00"></div>
        <div class="days__item d-flex d-sm-none" data-hour="16:00"></div>
        <div class="days__item d-flex d-sm-none" data-hour="17:00"></div>
        <div class="days__item d-flex d-sm-none" data-hour="18:00"></div>
        <div class="days__item d-flex d-sm-none" data-hour="19:00"></div>
        <div class="days__item d-flex d-sm-none" data-hour="20:00"></div>
        <div class="days__item d-flex d-sm-none" data-hour="21:00"></div>
      </div>
      <div class="days" data-weekday="` + nowWeekDaysDB[1] +`">
        <div class="days__item" data-hour="09:00"></div>
        <div class="days__item" data-hour="10:00"></div>
        <div class="days__item" data-hour="11:00"></div>
        <div class="days__item" data-hour="12:00"></div>
        <div class="days__item" data-hour="13:00"></div>
        <div class="days__item d-flex d-sm-none" data-hour="14:00"></div>
        <div class="days__item d-flex d-sm-none" data-hour="15:00"></div>
        <div class="days__item d-flex d-sm-none" data-hour="16:00"></div>
        <div class="days__item d-flex d-sm-none" data-hour="17:00"></div>
        <div class="days__item d-flex d-sm-none" data-hour="18:00"></div>
        <div class="days__item d-flex d-sm-none" data-hour="19:00"></div>
        <div class="days__item d-flex d-sm-none" data-hour="20:00"></div>
        <div class="days__item d-flex d-sm-none" data-hour="21:00"></div>
      </div>
      <div class="days" data-weekday="` + nowWeekDaysDB[2] +`">
        <div class="days__item" data-hour="09:00"></div>
        <div class="days__item" data-hour="10:00"></div>
        <div class="days__item" data-hour="11:00"></div>
        <div class="days__item" data-hour="12:00"></div>
        <div class="days__item" data-hour="13:00"></div>
        <div class="days__item d-flex d-sm-none" data-hour="14:00"></div>
        <div class="days__item d-flex d-sm-none" data-hour="15:00"></div>
        <div class="days__item d-flex d-sm-none" data-hour="16:00"></div>
        <div class="days__item d-flex d-sm-none" data-hour="17:00"></div>
        <div class="days__item d-flex d-sm-none" data-hour="18:00"></div>
        <div class="days__item d-flex d-sm-none" data-hour="19:00"></div>
        <div class="days__item d-flex d-sm-none" data-hour="20:00"></div>
        <div class="days__item d-flex d-sm-none" data-hour="21:00"></div>
      </div>
      <div class="days" data-weekday="` + nowWeekDaysDB[3] +`">
        <div class="days__item" data-hour="09:00"></div>
        <div class="days__item" data-hour="10:00"></div>
        <div class="days__item" data-hour="11:00"></div>
        <div class="days__item" data-hour="12:00"></div>
        <div class="days__item" data-hour="13:00"></div>
        <div class="days__item d-flex d-sm-none" data-hour="14:00"></div>
        <div class="days__item d-flex d-sm-none" data-hour="15:00"></div>
        <div class="days__item d-flex d-sm-none" data-hour="16:00"></div>
        <div class="days__item d-flex d-sm-none" data-hour="17:00"></div>
        <div class="days__item d-flex d-sm-none" data-hour="18:00"></div>
        <div class="days__item d-flex d-sm-none" data-hour="19:00"></div>
        <div class="days__item d-flex d-sm-none" data-hour="20:00"></div>
        <div class="days__item d-flex d-sm-none" data-hour="21:00"></div>
      </div>
      <div class="days" data-weekday="` + nowWeekDaysDB[4] +`">
        <div class="days__item" data-hour="09:00"></div>
        <div class="days__item" data-hour="10:00"></div>
        <div class="days__item" data-hour="11:00"></div>
        <div class="days__item" data-hour="12:00"></div>
        <div class="days__item" data-hour="13:00"></div>
        <div class="days__item d-flex d-sm-none" data-hour="14:00"></div>
        <div class="days__item d-flex d-sm-none" data-hour="15:00"></div>
        <div class="days__item d-flex d-sm-none" data-hour="16:00"></div>
        <div class="days__item d-flex d-sm-none" data-hour="17:00"></div>
        <div class="days__item d-flex d-sm-none" data-hour="18:00"></div>
        <div class="days__item d-flex d-sm-none" data-hour="19:00"></div>
        <div class="days__item d-flex d-sm-none" data-hour="20:00"></div>
        <div class="days__item d-flex d-sm-none" data-hour="21:00"></div>
      </div>
      <div class="days" data-weekday="` + nowWeekDaysDB[5] +`">
        <div class="days__item" data-hour="09:00"></div>
        <div class="days__item" data-hour="10:00"></div>
        <div class="days__item" data-hour="11:00"></div>
        <div class="days__item" data-hour="12:00"></div>
        <div class="days__item" data-hour="13:00"></div>
        <div class="days__item d-flex d-sm-none" data-hour="14:00"></div>
        <div class="days__item d-flex d-sm-none" data-hour="15:00"></div>
        <div class="days__item d-flex d-sm-none" data-hour="16:00"></div>
        <div class="days__item d-flex d-sm-none" data-hour="17:00"></div>
        <div class="days__item d-flex d-sm-none" data-hour="18:00"></div>
        <div class="days__item d-flex d-sm-none" data-hour="19:00"></div>
        <div class="days__item d-flex d-sm-none" data-hour="20:00"></div>
        <div class="days__item d-flex d-sm-none" data-hour="21:00"></div>
      </div>
      <div class="days" data-weekday="` + nowWeekDaysDB[6] +`">
        <div class="days__item" data-hour="09:00"></div>
        <div class="days__item" data-hour="10:00"></div>
        <div class="days__item" data-hour="11:00"></div>
        <div class="days__item" data-hour="12:00"></div>
        <div class="days__item" data-hour="13:00"></div>
        <div class="days__item d-flex d-sm-none" data-hour="14:00"></div>
        <div class="days__item d-flex d-sm-none" data-hour="15:00"></div>
        <div class="days__item d-flex d-sm-none" data-hour="16:00"></div>
        <div class="days__item d-flex d-sm-none" data-hour="17:00"></div>
        <div class="days__item d-flex d-sm-none" data-hour="18:00"></div>
        <div class="days__item d-flex d-sm-none" data-hour="19:00"></div>
        <div class="days__item d-flex d-sm-none" data-hour="20:00"></div>
        <div class="days__item d-flex d-sm-none" data-hour="21:00"></div>
      </div>
    </div>
  </div>
  <div class="mob-week-days">
    <button class="mob-week-days__item">Пн</button>
    <button class="mob-week-days__item">Вт</button>
    <button class="mob-week-days__item mob-week-days__item--active">Ср</button>
    <button class="mob-week-days__item">Чт</button>
    <button class="mob-week-days__item">Пт</button>
    <button class="mob-week-days__item">Сб</button>
    <button class="mob-week-days__item">Вс</button>
  </div>
</div>`;

// текущий день недели
const nowWeekday = () => {
  let nowDate = new Date();
  let nowDateSlice = new Date().toLocaleDateString().slice(0, -5);
  return nowDateSlice + ' ' + nowWeekDaysMobDB[nowDate.getDay()];
};

const onChangeMaxHeightItem = (arrDays, arrHours) => {
  let arrHeight = [];

  [...arrDays].map(a => {
    arrHeight.push(a.clientHeight);
  });

  let maxArrHeight = arrHeight[0];
  for (let i = 1; i < arrHeight.length; ++i) {
    if (arrHeight[i] > maxArrHeight) maxArrHeight = arrHeight[i];
  }

  if (window.matchMedia('(min-width: 577px)').matches) {
    arrDays.forEach(item => {
      item.style.height = `${maxArrHeight}px`;
      item.style.minHeight = `100px`;
    });

    arrHours.forEach(item => {
      item.style.height = `${maxArrHeight}px`;
      item.style.minHeight = `100px`;
    });
  }
};

const getMobMaxHeightItem = (activeDay, arrDays, arrHours) => {
  arrHours = arrHours.querySelectorAll('.hours__item');

  const activeDayLessons = [...arrDays].filter(
    item =>
      item.getAttribute('data-weekDay') === activeDay.innerText.slice(0, 5),
  );

  const activeItems = [];
  activeDayLessons.map(a => activeItems.push(a.children));

  let arrHeight = [];

  setTimeout(() => {
    if (activeItems[0]) {
      [...activeItems[0]].map(a => {
        arrHeight.push(a.offsetHeight);
      });

      [...activeItems[0]].forEach((item, i) => {
        item.style.minHeight = `${arrHeight[i]}px`;
      });
    }

    arrHours.forEach((item, i) => {
      item.style.minHeight = `${arrHeight[i]}px`;
    });
  }, 100);
};

// popover для урока
export const customPopover = item => {
  const el = item.querySelector('[data-bs-toggle="popover"]');
  if (el) {
    let opts = {
      html: true,
      animation: false,
      content: $('[data-name="popover-content-*"]'),
      container: 'body',
    };

    if (el.hasAttribute('data-bs-content-id')) {
      opts.content = document.getElementById(
        el.getAttribute('data-bs-content-id'),
      ).innerHTML;
      opts.html = true;
    }
    let popover = new bootstrap.Popover(el, opts);

    if (!document.querySelector('.popover.show')) {
      popover.show();
    }

    if (document.querySelector('.popover')) {
      document.querySelector('.popover').addEventListener('click', e => {
        if (e.target.className === 'lesson__popover-close') {
          popover.hide();
        } else {
          e.preventDefault();
        }
      });

      document.querySelector('.popover a').addEventListener('click', e => {
        window.location.href = document
          .querySelector('.popover a')
          .getAttribute('href');
        setTimeout(() => {
          popover.hide();
        }, 1000);
      });
    }
  }
};

const mobActiveWeekdayBtn = day => {
  const btns = document.querySelectorAll('.mob-week-days__item');

  btns.forEach(btn => {
    btn.classList.remove('mob-week-days__item--active');
    // console.log(day);
    if (btn.getAttribute('data-day') === day.innerText.substring(6)) {
      btn.classList.add('mob-week-days__item--active');
    }

    btn.addEventListener('click', e => {
      e.preventDefault();
      btn.classList.add('mob-week-days__item--active');

      return btn.getAttribute('data-day');
    });
  });
};

const onClickWeekDayBtn = () => {
  const btns = document.querySelectorAll('.mob-week-days__item');
  btns.forEach(btn => {
    btn.addEventListener('clik', e => {
      e.preventDefault();
      btn.classList.add('mob-week-days__item--active');
      return btn.getAttribute('data-day');
    });
  });
};

// активный день
function mobActiveDay(days, day) {
  days.forEach(function(item) {
    item.classList.remove('days--active');

    if (window.matchMedia('(min-width: 577px)').matches) {
      item.classList.remove('days--active');
    } else if (window.matchMedia('(max-width: 576px)').matches) {
      if (
        item.getAttribute('data-weekDay').slice(0, 5) ===
        day.innerText.slice(0, 5)
      ) {
        item.classList.add('days--active');
      }

      mobActiveWeekdayBtn(day);
    }
  });
}

function mobWeekDays(weekDays, activeWeekDay, days, btn, hours) {
  weekDays.childNodes.forEach(function(item) {
    let day = nowWeekday();

    item.addEventListener('click', function(evt) {
      evt.preventDefault();

      if (item.innerText === evt.currentTarget.innerText) {
        day = item.innerText;

        activeWeekDay.innerText = '';
        activeWeekDay.innerText = day;

        mobActiveDay(days, activeWeekDay, hours);

        getMobMaxHeightItem(activeWeekDay, days, hours);
      }

      onMenuClose(btn, weekDays, hours);
    });
  });
}

function onMenuClose(btn, weekDays, hours) {
  btn.classList.remove('schedule__button--open');
  weekDays.classList.remove('week-days--open');
  hours.classList.remove('hours--opacity');
}

function mobMenuToogle(btn, days, hours) {
  btn.classList.toggle('schedule__button--open');
  days.classList.toggle('week-days--open');
  hours.classList.toggle('hours--opacity');
}

function onScheduleBtnClick(btn, weekDays, days, hours, activeWeekDay) {
  if (btn) {
    btn.addEventListener('click', function(evt) {
      evt.preventDefault();

      mobMenuToogle(btn, weekDays, hours);

      if (weekDays.classList.contains('week-days--open')) {
        mobWeekDays(weekDays, activeWeekDay, days, btn, hours);
      }
    });
  }
}

const activeHoursItem = (hours, hourText) => {
  hours.forEach(function(item) {
    if (item.innerText === hourText) {
      item.classList.add('hours__item--active');
    }
  });
};

function activeWeekDay(weekDays, weekDayText, nowActiveWeekDay) {
  weekDays.forEach(function(item) {
    if (item.innerText.slice(0, 5) === weekDayText) {
      item.classList.add('week-days__item--active');
      nowActiveWeekDay.classList.add('schedule__item-active--active');
    } else {
      item.classList.remove('week-days__item--active');
    }
  });
}

function noActiveHoursItem(hours, hourText) {
  hours.forEach(function(item) {
    if (item.innerText === hourText) {
      item.classList.remove('hours__item--active');
    }
  });
}

function noActiveWeekDay(weekDays, weekDayText, nowActiveWeekDay) {
  weekDays.forEach(function(item) {
    if (item.innerText === weekDayText) {
      item.classList.remove('week-days__item--active');
      nowActiveWeekDay.classList.remove('schedule__item-active--active');
    }
  });
}

const activeDaysItem = (days, hours, weekDays, nowActiveWeekDay) => {
  days.forEach(item => {
    const lessonName = item.querySelector('.lesson__name');

    item.addEventListener('mouseover', function() {
      const hourText = item.getAttribute('data-hour');
      const weekDayText = item.parentElement.getAttribute('data-weekDay');

      activeHoursItem(hours, hourText);
      activeWeekDay(weekDays, weekDayText, nowActiveWeekDay);

      item.classList.add('days__item--active');

      // проблема - срабатывает несколько раз!!
      if (lessonName) {
        lessonName.addEventListener('click', e => {
          e.preventDefault();
          if (item.querySelector('.text').innerText !== 'undefined') {
            customPopover(item);
          }
        });

        lessonName.addEventListener('keypress', function(e) {
          if (e.key === 'Enter') {
            e.preventDefault();
            customPopover(item);
          }
        });

        lessonName.addEventListener('keydown', e => {
          if (e.key === 'Escape') {
            if (document.querySelector('.popover.show')) {
              document.querySelector('.popover.show').remove();
            }
          }
        });
      }
    });

    item.addEventListener('mouseout', function() {
      const hourText = item.getAttribute('data-hour');
      const weekDayText = item.parentElement.getAttribute('data-weekDay');

      noActiveHoursItem(hours, hourText);

      noActiveWeekDay(weekDays, weekDayText, nowActiveWeekDay);

      item.classList.remove('days__item--active');
    });

    // lessonName.addEventListener('click', evt => {
    //   customPopover(evt.currentTarget);
    // });
  });
};

// тут выбирает в массив все элементы по времени.
// проблема в расчете высоты если элементов больше 7, высоту беру максимальную из всей длины массива, но в одном ряду могут быть элементы с максимальной высотой меньше той, которую беру
// не получилось выбрать
const rowItems = (days, datahour) => {
  let result = [...days].filter(
    item => item.getAttribute('data-hour') === datahour,
  );

  return result;
};


function createschedule() {
  const daysListElement = document.querySelector('.schedule__days');
  const weekDaysListElement = document.querySelector('.schedule__week-days');

  const hoursListElement = document.querySelector('.schedule__hours');
  const hoursListMorningElement = document.querySelector('.hours__morning');
  const hoursListDayElement = document.querySelector('.hours__day');
  const hoursListEveningElement = document.querySelector('.hours__evening');

  const mobNavElement = document.querySelector('.schedule__mob-nav');

  const scheduleFragment = document.createDocumentFragment();
  const hoursFragment = document.createDocumentFragment();
  const hoursMorningFragment = document.createDocumentFragment();
  const hoursDayFragment = document.createDocumentFragment();
  const hoursEveningFragment = document.createDocumentFragment();
  const weekDaysFragment = document.createDocumentFragment();
  const activeDayFragment = document.createDocumentFragment();
  const btnFragment = document.createDocumentFragment();

  const btn = document.createElement('button');
  btn.classList = 'schedule__button';
  btn.setAttribute('type', 'button');
  btn.setAttribute('aria-label', 'Выбор дня недели');

  // svg icon
  const iconSvg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');
  const iconPath = document.createElementNS(
    'http://www.w3.org/2000/svg',
    'path',
  );

  iconSvg.setAttribute('fill', 'none');
  iconSvg.setAttribute('width', '14');
  iconSvg.setAttribute('height', '8');
  iconSvg.setAttribute('viewBox', '0 0 14 8');
  iconSvg.classList.add('icon');

  iconPath.setAttribute(
    'd',
    'M0.226288 1.04076C0.509005 0.79525 0.966421 0.79525 1.24796 1.04076L6.5055 5.62564L11.7851 1.04076C12.0679 0.79525 12.5253 0.79525 12.8068 1.04076C13.0883 1.28628 13.0874 1.68433 12.8047 1.92985L7.01313 6.95927C6.73041 7.20478 6.27299 7.20478 5.99146 6.95927L0.224146 1.92985C-0.057388 1.68433 -0.0564294 1.28628 0.226288 1.04076Z',
  );

  iconPath.setAttribute('fill-rule', 'evenodd');
  iconPath.setAttribute('clip-rule', 'evenodd');
  iconPath.setAttribute('fill', '#42474D');

  iconSvg.appendChild(iconPath);
  //  svg icon

  const activeDay = document.createElement('span');
  activeDay.classList = 'schedule__item-active';
  activeDay.innerText = nowWeekday();

  btn.appendChild(activeDay);
  btn.appendChild(iconSvg);
  activeDayFragment.appendChild(btn);

  for (let i = 0; i < scheduleDB.length; i++) {
    const weekDayDiv = document.createElement('div');
    weekDayDiv.className = 'week-days__item';

    if (window.matchMedia('(max-width: 576px)').matches) {
      weekDayDiv.innerText = scheduleDB[i].day + ' ' + weekDaysMobDB[i];
    } else {
      weekDayDiv.innerText = scheduleDB[i].day + ' ' + weekDaysDB[i];
    }

    if (weekDaysListElement) {
      weekDaysListElement.appendChild(weekDayDiv);
    }

    let divParent = document.createElement('div');
    divParent.className = 'days';
    divParent.setAttribute('data-weekDay', scheduleDB[i].day);

    for (var j = 0; j < scheduleDB[i].lessons.length; j++) {
      // занятия
      var div = document.createElement('div');
      div.className = 'days__item';
      div.innerHTML = scheduleDB[i].lessons[j].template;
      div.setAttribute('data-hour', scheduleDB[i].lessons[j].hours);
      divParent.appendChild(div);
    }
    scheduleFragment.appendChild(divParent);
    weekDaysFragment.appendChild(weekDayDiv);
  }

  // часы
  // утро
  let hoursMorningDiv = document.createElement('div');
  hoursMorningDiv.className = 'hours__morning';

  for (let s = 0; s < hoursMorningDB.length; s++) {
    let hoursDiv = document.createElement('div');
    hoursDiv.className = 'hours__item';
    hoursDiv.innerText = hoursMorningDB[s];
    hoursDiv.setAttribute('data-hour', hoursMorningDB[s]);
    hoursMorningDiv.appendChild(hoursDiv);
    hoursMorningFragment.appendChild(hoursMorningDiv);
    hoursFragment.appendChild(hoursMorningFragment);
  }

  // день
  let hoursDayDiv = document.createElement('div');
  hoursDayDiv.className = 'hours__day';

  for (let s = 0; s < hoursDayDB.length; s++) {
    let hoursDiv = document.createElement('div');
    hoursDiv.className = 'hours__item';
    hoursDiv.innerText = hoursDayDB[s];
    hoursDiv.setAttribute('data-hour', hoursDayDB[s]);
    hoursDayDiv.appendChild(hoursDiv);
    hoursDayFragment.appendChild(hoursDayDiv);
    hoursFragment.appendChild(hoursDayFragment);
  }

  // вечер
  let hoursEveningDiv = document.createElement('div');
  hoursEveningDiv.className = 'hours__evening';

  for (let s = 0; s < hourseveningDB.length; s++) {
    let hoursDiv = document.createElement('div');
    hoursDiv.className = 'hours__item';
    hoursDiv.innerText = hourseveningDB[s];
    hoursDiv.setAttribute('data-hour', hourseveningDB[s]);
    hoursEveningDiv.appendChild(hoursDiv);
    hoursEveningFragment.appendChild(hoursEveningDiv);
    hoursFragment.appendChild(hoursEveningFragment);
  }

  if (daysListElement) {
    daysListElement.innerHTML = '';
    daysListElement.appendChild(scheduleFragment);
  }

  if (hoursListMorningElement) {
    hoursListMorningElement.innerHTML = '';
    hoursListMorningElement.appendChild(hoursMorningFragment);
  }

  if (hoursListDayElement) {
    hoursListDayElement.innerHTML = '';
    hoursListDayElement.appendChild(hoursDayFragment);
  }

  if (hoursListEveningElement) {
    hoursListEveningElement.innerHTML = '';
    hoursListEveningElement.appendChild(hoursEveningFragment);
  }

  if (hoursListElement) {
    hoursListElement.innerHTML = '';
    hoursListElement.appendChild(hoursFragment);
  }

  if (weekDaysListElement) {
    weekDaysListElement.innerHTML = '';
    weekDaysListElement.appendChild(weekDaysFragment);
  }

  if (mobNavElement) {
    mobNavElement.innerHTML = '';
    mobNavElement.appendChild(activeDayFragment);

    mobNavElement.append(btnFragment);
  }

  let nowActiveWeekDay = document.querySelector('.schedule__item-active');
  const weekDaysItems = document.querySelectorAll('.week-days__item');
  const hours = document.querySelector('.hours');
  const hoursItems = document.querySelectorAll('.hours__item');
  const daysItems = document.querySelectorAll('.days__item');
  const daysLessons = document.querySelectorAll('.days__item .lesson');
  const days = document.querySelectorAll('.days');

  activeDaysItem(daysItems, hoursItems, weekDaysItems, nowActiveWeekDay);

  if (window.matchMedia('(max-width: 576px)').matches) {
    getMobMaxHeightItem(nowActiveWeekDay, days, hours);
  } else {
    for (let d = 0; d < hoursAllDB.length; d++) {
      let ddd = [...hoursItems].filter(
        item => item.innerText === hoursAllDB[d],
      );

      onChangeMaxHeightItem(rowItems(daysItems, hoursAllDB[d]), ddd);
    }
  }
}

const getDaySchedule = () => {
  // взаимодействие
  const hours = document.querySelector('.hours');
  const hoursItems = document.querySelectorAll('.hours__item');
  const daysArr = document.querySelectorAll('.days');
  const daysItems = document.querySelectorAll('.days__item');
  const weekDays = document.querySelector('.week-days');
  const weekDaysItems = document.querySelectorAll('.week-days__item');
  const scheduleBtn = document.querySelector('.schedule__button');
  const activeWeekDay = document.querySelector('.schedule__item-active');
  const mobWeekDaysButtons = document.querySelectorAll('.mob-week-days__item');

  if (window.matchMedia('(max-width: 576px)').matches) {
    getMobMaxHeightItem(activeWeekDay, daysArr, hours);
  } else {
    for (let d = 0; d < hoursAllDB.length; d++) {
      let ddd = [...hoursItems].filter(
        item => item.innerText === hoursAllDB[d],
      );
      onChangeMaxHeightItem(rowItems(daysItems, hoursAllDB[d]), ddd);
    }
  }

  window.addEventListener('resize', () => {
    mobActiveDay(daysArr, activeWeekDay, hours);
    activeDaysItem(daysItems, hoursItems, weekDaysItems, activeWeekDay);
    onChangeMaxHeightItem(daysItems, hoursItems);
  });

  mobActiveDay(daysArr, activeWeekDay, hours);
  activeDaysItem(daysItems, hoursItems, weekDaysItems, activeWeekDay);
  onScheduleBtnClick(scheduleBtn, weekDays, daysArr, hours, activeWeekDay);
};

// form
const form = document.querySelector('.form-schedule');
const btn = form
  .querySelector('[data-schedule="schedule"]')
  .getAttribute('data-schedule');

// scroll
const onScrollFormToSchedule = btn => {
  document.getElementById(btn).scrollIntoView({
    behavior: 'smooth',
    inline: 'start',
  });
};

//  вывод расписаниея активного дня в мобилке
//
if (window.matchMedia('(max-width: 576px)').matches) {
  //  вывод расписаниея активного дня в мобилке
  getDaySchedule();
}

form.addEventListener('submit', e => {
  e.preventDefault();

  if (document.querySelector('.schedule')) {
    document.querySelector('.schedule').classList.remove('schedule--empty');
  }

  onScrollFormToSchedule(btn);

  // выводим распписание клуба
  createschedule();

  if (window.matchMedia('(max-width: 576px)').matches) {
    //  вывод расписаниея активного дня в мобилке
    getDaySchedule();
  }
});

form.addEventListener('reset', e => {
  e.preventDefault();

  form.querySelectorAll('.form-select').forEach(item => {});
  document.querySelector('.schedule__inner').remove();
  document.querySelector('.schedule').classList.add('schedule--empty');
  document.querySelector('.schedule').innerHTML = scheduleEmpty;
});

