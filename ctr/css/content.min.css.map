{"version":3,"sources":["utils.scss","fonts.scss","base.scss","content.min.css","blocks/container-list.scss","blocks/button.scss","mixins.scss","blocks/block-w.scss","blocks/block-name.scss","blocks/block-add.scss","blocks/block-control.scss","blocks/bl-dropdown.scss"],"names":[],"mappings":"AAAA,iBACE,SAAA,SACA,SAAA,OACA,KAAA,cACA,MAAA,IACA,OAAA,IACA,OAAA,KACA,QAAA,EACA,YAAA,OACA,OAAA,EACA,kBAAA,YAAA,UAAA,YCVF,WACE,YAAA,eACA,aAAA,KACA,IAAA,6BAAA,eAAA,CAAA,4BAAA,eAEA,YAAA,IACA,WAAA,OAGF,WACE,YAAA,eACA,aAAA,KACA,IAAA,gCAAA,eAAA,CAAA,+BAAA,eAEA,YAAA,IACA,WAAA,OAGF,WACE,YAAA,gBACA,aAAA,KACA,IAAA,iCAAA,eAAA,CAAA,gCAAA,eAEA,YAAA,IACA,WAAA,OCtBF,ECwCA,QADA,SDpCE,mBAAA,WAAA,WAAA,WACA,QAAA,EAGF,EACE,OAAA,EACA,QAAA,ECyCF,KDtCA,KAEE,OAAA,KAGF,KACE,SAAA,SACA,OAAA,EACA,QAAA,EACA,YAAA,cAAA,CAAA,KAAA,CAAA,WAEA,UAAA,KACA,YAAA,IACA,YAAA,KACA,MAAA,KAIF,IACE,UAAA,KACA,OAAA,KAKF,SACE,SAAA,SACA,QAAA,YAAA,QAAA,YAAA,QAAA,KACA,mBAAA,SAAA,sBAAA,OAAA,mBAAA,OAAA,eAAA,OACA,OAAA,KACA,gBACE,cAAA,KAIJ,eACE,QAAA,YAAA,QAAA,YAAA,QAAA,KACA,mBAAA,SAAA,sBAAA,OAAA,mBAAA,OAAA,eAAA,OACA,OAAA,KAGF,SACE,iBAAA,EAAA,SAAA,EAAA,EAAA,KAAA,KAAA,EAAA,EAAA,KACA,cAAA,KAEA,yBAJF,SAKI,cAAA,OAGF,yBARF,SASI,cAAA,GAIJ,aACE,iBAAA,EAAA,SAAA,EAAA,EAAA,KAAA,KAAA,EAAA,EAAA,KAGF,SACE,SAAA,OAGF,gBACE,WAAA,KACA,OAAA,KAGF,WACE,QAAA,KAEA,SAAA,SACA,IAAA,EACA,KAAA,EACA,MAAA,KACA,OAAA,KACA,QAAA,GAGF,kBACE,QAAA,MAEA,SAAA,SACA,IAAA,EACA,KAAA,EACA,MAAA,KACA,OAAA,KACA,QAAA,GACA,WAAA,QAGF,6BACE,kBAAA,KAAA,GAAA,EAAA,UAAA,KAAA,GAAA,EACA,4BAAA,SAAA,oBAAA,SACA,wBAAA,GAAA,gBAAA,GACA,mBAAA,GAAA,WAAA,GAGF,qBACE,QAAA,MACA,SAAA,SACA,QAAA,MACA,MAAA,KACA,OAAA,mBACA,WAAA,KACA,WAAA,QAGF,OACE,QAAA,YAAA,QAAA,YAAA,QAAA,KACA,iBAAA,OAAA,cAAA,OAAA,gBAAA,OACA,kBAAA,OAAA,eAAA,OAAA,YAAA,OACA,MAAA,KACA,OAAA,KACA,MAAA,KACA,WAAA,KACA,cAAA,IACA,UAAA,aAAA,KAAA,SACA,kBAAA,aAAA,KAAA,SAGF,gCACE,GACE,mBAAA,EAAA,EAAA,EAAA,EAAA,QAAA,WAAA,EAAA,EAAA,EAAA,EAAA,QAGF,KACE,mBAAA,EAAA,EAAA,EAAA,KAAA,YAAA,WAAA,EAAA,EAAA,EAAA,KAAA,aANJ,wBACE,GACE,mBAAA,EAAA,EAAA,EAAA,EAAA,QAAA,WAAA,EAAA,EAAA,EAAA,EAAA,QAGF,KACE,mBAAA,EAAA,EAAA,EAAA,KAAA,YAAA,WAAA,EAAA,EAAA,EAAA,KAAA,aAIJ,YACE,MAAA,MACA,UAAA,MACA,OAAA,EAAA,KAEA,iBAAA,KAGF,YACE,MAAA,MACA,UAAA,MACA,OAAA,EAAA,KAEA,iBAAA,KAGF,UACE,QAAA,KAGF,UACE,QAAA,MACA,QAAA,IAAA,KACA,UAAA,IACA,cAAA,IAAA,MAAA,KExKF,gBACE,SAAA,SACA,WAAA,KACA,WAAA,KAGF,sBACE,SAAA,SACA,QAAA,YAAA,QAAA,YAAA,QAAA,KACA,kBAAA,OAAA,eAAA,OAAA,YAAA,OACA,iBAAA,OAAA,cAAA,OAAA,gBAAA,OACA,OAAA,KACA,WAAA,MANF,iCASI,QAAA,ECfJ,QACE,QAAA,aACA,eAAA,OACA,iBAAA,YAEA,YAAA,OACA,oBAAA,KAAA,iBAAA,KAAA,gBAAA,KAAA,YAAA,KACA,OAAA,QACA,OAAA,KAEA,QAAA,EACA,WAAA,IAEA,mBAAA,GAAA,WAAA,GAbF,cAAA,cAiBI,QAAA,EAGF,cCuVM,QAAA,SDpVJ,WAAA,KACA,MAAA,KAJD,oBAAA,oBAQG,WAAA,QCqEF,0BD7EF,cCuVM,QAAA,SAAA,SDxUN,cACE,WAAA,IAEF,mBCqUM,QAAA,SDnUJ,WAAA,QAEA,MAAA,KAJD,yBAAA,yBAQG,WAAA,QCmDF,0BD3DF,mBCqUM,QAAA,SAAA,SDtTN,eCsTM,QAAA,SAAA,QDpTJ,WAAA,KACA,MAAA,QACA,OAAA,IAAA,MAAA,QAJD,qBAAA,qBAQG,MAAA,QACA,OAAA,IAAA,MAAA,QAGJ,aC0SM,QAAA,QAAA,QDxSJ,MAAA,KACA,WAAA,QAHD,mBAAA,mBAOG,WAAA,QExEN,SACE,SAAA,SACA,WAAA,MACA,iBAAA,KAEA,aACE,SAAA,SADD,qBAGG,SAAA,SACA,QAAA,EACA,QAAA,GACA,IAAA,EACA,KAAA,EACA,MAAA,KACA,OAAA,SACA,OAAA,IAAA,OAAA,KAVH,oBAaG,SAAA,SACA,QAAA,EACA,QAAA,GACA,OAAA,EACA,KAAA,EACA,MAAA,KACA,OAAA,SACA,OAAA,IAAA,OAAA,KAIJ,iBACE,SAAA,SACA,IAAA,KACA,KAAA,KAEA,iBAAA,YACA,MAAA,KACA,UAAA,MACA,UAAA,KACA,YAAA,KAEF,aACE,QAAA,aACA,cAAA,IACA,QAAA,IACA,cAAA,IACA,OAAA,IAAA,MAAA,KA7CJ,0BAiDI,QAAA,EACA,mBAAA,QAAA,IAAA,KAAA,WAAA,QAAA,IAAA,KACA,OAAA,KCnDJ,YACE,SAAA,SACA,IAAA,QACA,KAAA,QACA,UAAA,QACA,iBAAA,eACA,QAAA,IAAA,KACA,UAAA,IACA,MAAA,KACA,cAAA,IACA,QAAA,EACA,kBACE,aAAA,SCZJ,WACE,SAAA,SACA,QAAA,KACA,OAAA,MACA,QAAA,YAAA,QAAA,YAAA,QAAA,KACA,kBAAA,OAAA,eAAA,OAAA,YAAA,OACA,iBAAA,OAAA,cAAA,OAAA,gBAAA,OACA,MAAA,KAEA,WAAA,EAEA,QAAA,EACA,mBAAA,QAAA,IAAA,SAAA,WAAA,QAAA,IAAA,SAEA,mBACE,OAAA,KACA,IAAA,EACA,KAAA,EACA,MAAA,EACA,OAAA,EACA,OAAA,KAGF,iBACE,MAAA,KACA,OAAA,KACA,cAAA,IACA,WAAA,KAJD,+BAAA,+BASK,QAAA,GACA,mBAAA,IAAA,WAAA,IAIN,iBACE,KAAA,QHqUI,MAAA,UAAA,OAAA,UI3WR,eACE,QAAA,EACA,SAAA,SACA,IAAA,EACA,MAAA,EAEA,sBACE,QAAA,YAAA,QAAA,YAAA,QAAA,KAEF,qBACE,SAAA,SJiWI,OAAA,QAAA,SAAA,OAAA,OAAA,MAAA,OIlWL,4BAYG,QAAA,EAIJ,qBACE,SAAA,SACA,MAAA,KACA,OAAA,KAEA,KAAA,KACA,eAAA,KAEA,2BACE,IAAA,IACA,kBAAA,cAAA,UAAA,cAEF,wBACE,kBAAA,eAAA,UAAA,eAGJ,wBACE,SAAA,SACA,IAAA,IACA,KAAA,IACA,kBAAA,qBAAA,UAAA,qBACA,MAAA,KACA,OAAA,KACA,QAAA,YAAA,QAAA,YAAA,QAAA,KACA,mBAAA,SAAA,sBAAA,OAAA,mBAAA,OAAA,eAAA,OAEA,cAAA,IACA,SAAA,OACA,WAAA,QAEF,oBACE,SAAA,SACA,IAAA,IACA,KAAA,IACA,kBAAA,qBAAA,UAAA,qBAEA,QAAA,YAAA,QAAA,YAAA,QAAA,KACA,kBAAA,OAAA,eAAA,OAAA,YAAA,OACA,iBAAA,OAAA,cAAA,OAAA,gBAAA,OAEA,QAAA,EACA,MAAA,KACA,OAAA,KAEA,cAAA,IACA,SAAA,OACA,YAAA,GACA,WAAA,QAEA,QAAA,GACA,mBAAA,GAAA,WAAA,GACA,OAAA,QACA,2BACE,OAAA,IACA,cAAA,EAFD,uCAIG,IAAA,KAJH,4DAOK,IAAA,IAPL,sCAWG,OAAA,MACA,IAAA,KAZH,2DAeK,IAAA,KArCP,0BA2CG,QAAA,EACA,WAAA,QAKN,gDACE,QAAA,EACA,WAAA,QAGF,yCACE,QAAA,MC9GF,aACE,QAAA,KACA,SAAA,SACA,MAAA,EACA,IAAA,KACA,WAAA,eACA,MAAA,MACA,WAAA,MACA,cAAA,IARF,qBAWI,QAAA,GACA,SAAA,SACA,MAAA,KACA,IAAA,MACA,QAAA,EACA,OAAA,KAAA,MAAA,YACA,cAAA,KAAA,MAAA,eAEF,mBLlBA,WAAA,KACA,OAAA,EACA,QAAA,EKkBE,QAAA,KAEF,mBACE,UAAA,KACA,YAAA,IACA,MAAA,KAEF,kBACE,MAAA,KACA,OAAA,QAEF,mBACE,aAAA,KACA,MAAA,KACA,OAAA,KAEA,KAAA,KR4dJ,4CQxdA,2CRudA,2CQpdE,MAAA,QACA,mBAAA,IAAA,WAAA,IR2dF,6CQzdA,4CRwdA,4CQrdE,KAAA,QACA,mBAAA,IAAA,WAAA","file":"content.min.css","sourcesContent":[".visually-hidden {\r\n  position: absolute;\r\n  overflow: hidden;\r\n  clip: rect(0 0 0 0);\r\n  width: 1px;\r\n  height: 1px;\r\n  margin: -1px;\r\n  padding: 0;\r\n  white-space: nowrap;\r\n  border: 0;\r\n  clip-path: inset(100%);\r\n}\r\n","@font-face {\r\n  font-family: $OpenSans;\r\n  font-display: auto;\r\n  src: url(\"../fonts/opensans.woff2\") format(\"woff2\"),\r\n    url(\"../fonts/opensans.woff\") format(\"woff\");\r\n  font-weight: 600;\r\n  font-style: normal;\r\n}\r\n\r\n@font-face {\r\n  font-family: $Robotolight;\r\n  font-display: auto;\r\n  src: url(\"../fonts/Robotolight.woff2\") format(\"woff2\"),\r\n    url(\"../fonts/Robotolight.woff\") format(\"woff\");\r\n  font-weight: 300;\r\n  font-style: normal;\r\n}\r\n\r\n@font-face {\r\n  font-family: $Robotomedium;\r\n  font-display: auto;\r\n  src: url(\"../fonts/Robotomedium.woff2\") format(\"woff2\"),\r\n    url(\"../fonts/Robotomedium.woff\") format(\"woff\");\r\n  font-weight: 500;\r\n  font-style: normal;\r\n}\r\n","\r\n\r\n*,\r\n*::before,\r\n*::after {\r\n  box-sizing: border-box;\r\n  outline: none;\r\n}\r\n\r\n* {\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n\r\nhtml,\r\nbody {\r\n  height: 100%;\r\n}\r\n\r\nbody {\r\n  position: relative;\r\n  margin: 0;\r\n  padding: 0;\r\n  font-family: $font-base;\r\n\r\n  font-size: 16px;\r\n  font-weight: 400;\r\n  line-height: 24px;\r\n  color: $text-color;\r\n\r\n}\r\n\r\nimg {\r\n  max-width: 100%;\r\n  height: auto;\r\n}\r\n\r\n// footer к низу\r\n\r\n.wrapper {\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: auto;\r\n  &--mb-50 {\r\n    margin-bottom: 50px;\r\n  }\r\n}\r\n\r\n.wrapper-place {\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: auto;\r\n}\r\n\r\n.content {\r\n  flex: 1 0 auto;\r\n  margin-bottom: 70px;\r\n\r\n  @media (min-width: 600px) {\r\n    margin-bottom: 100px;\r\n  }\r\n\r\n  @media (min-width: 768px) {\r\n    margin-bottom: 0;\r\n  }\r\n}\r\n\r\n.page-footer {\r\n  flex: 0 0 auto;\r\n}\r\n\r\n.overlay {\r\n  overflow: hidden;\r\n}\r\n\r\n.scroll-content {\r\n  overflow-y: auto;\r\n  height: 100%;\r\n}\r\n\r\n.js-iframe {\r\n  display: none;\r\n\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  z-index: 35;\r\n}\r\n\r\n.js-iframe.active {\r\n  display: block;\r\n\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  z-index: 35;\r\n  visibility: visible;\r\n}\r\n\r\n.js-iframe.anim-hover.active {\r\n  animation: show 0s 1;\r\n  animation-fill-mode: forwards;\r\n  animation-delay: 0s;\r\n  transition: 1s;\r\n}\r\n\r\n.js-iframe.bl-iframe {\r\n  display: block;\r\n  position: relative;\r\n  display: block;\r\n  width: 100%;\r\n  height: calc(100vh - 50px);\r\n  background: #ffffff;\r\n  visibility: visible;\r\n}\r\n\r\n.pulse {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 45px;\r\n  height: 45px;\r\n  color: gray;\r\n  background: white;\r\n  border-radius: 50%;\r\n  animation: radial-pulse 1.5s infinite;\r\n  -webkit-animation: radial-pulse 1.5s infinite;\r\n}\r\n\r\n@keyframes radial-pulse {\r\n  0% {\r\n    box-shadow: 0 0 0 0px $color-turquoise;\r\n  }\r\n\r\n  100% {\r\n    box-shadow: 0 0 0 40px rgba(0, 0, 0, 0);\r\n  }\r\n}\r\n\r\n.wrapper-xs {\r\n  width: 320px;\r\n  min-width: 320px;\r\n  margin: 0 auto;\r\n\r\n  background-color: #ffffff;\r\n}\r\n\r\n.wrapper-sm {\r\n  width: 768px;\r\n  min-width: 768px;\r\n  margin: 0 auto;\r\n\r\n  background-color: #ffffff;\r\n}\r\n\r\n.box-edit {\r\n  display: none;\r\n}\r\n\r\n.tmp-name {\r\n  display: block;\r\n  padding: 5px 10px;\r\n  font-size: 85%;\r\n  border-bottom: 1px solid #dddddd;\r\n}\r\n",null,".container-list {\r\n  position: relative;\r\n  background: #ffffff;\r\n  min-height: 100%;\r\n}\r\n\r\n.container-list.empty {\r\n  position: relative;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 100%;\r\n  min-height: 100vh;\r\n\r\n  & .block-add {\r\n    opacity: 1;\r\n  }\r\n}\r\n",".button {\r\n  display: inline-block;\r\n  vertical-align: middle;\r\n  background-color: transparent;\r\n\r\n  white-space: nowrap;\r\n  user-select: none;\r\n  cursor: pointer;\r\n  border: none;\r\n\r\n  outline: none;\r\n  background: transparent;\r\n\r\n  transition: 1s;\r\n\r\n  &:focus,\r\n  &:hover {\r\n    outline: 0;\r\n  }\r\n\r\n  &--gray {\r\n    @include rem(padding, 5px);\r\n\r\n    background: $color-gray;\r\n    color: #ffffff;\r\n\r\n    &:focus,\r\n    &:hover {\r\n      background: darker($color-gray, 1.5);\r\n    }\r\n\r\n    @include respond-above(lg) {\r\n      @include rem(padding, 5px 10px);\r\n    }\r\n  }\r\n  &--plus {\r\n    background: transparent;\r\n  }\r\n  &--turquoise {\r\n    @include rem(padding, 5px);\r\n    background: $color-turquoise;\r\n\r\n    color: #ffffff;\r\n\r\n    &:focus,\r\n    &:hover {\r\n      background: darker($color-turquoise, 1.5);\r\n    }\r\n\r\n    @include respond-above(lg) {\r\n      @include rem(padding, 5px 10px);\r\n    }\r\n  }\r\n  &--white {\r\n    @include rem(padding, 5px 10px);\r\n    background: #ffffff;\r\n    color: $color-turquoise;\r\n    border: 1px solid $color-turquoise;\r\n\r\n    &:focus,\r\n    &:hover {\r\n      color: darker($color-turquoise, 1.5);\r\n      border: 1px solid darker($color-turquoise, 1.5);\r\n    }\r\n  }\r\n  &--red {\r\n    @include rem(padding, 10px 20px);\r\n    color: #ffffff;\r\n    background: #ff8080;\r\n\r\n    &:focus,\r\n    &:hover {\r\n      background: darker(#ff8080, 1.5);\r\n    }\r\n  }\r\n}\r\n","@mixin listReset() {\r\n  list-style: none;\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n\r\n// цвета\r\n\r\n@function darker($color, $tone) {\r\n  $adjust: -16*$tone;\r\n  @return adjust-color($color, $red: $adjust, $green: $adjust, $blue: $adjust);\r\n}\r\n\r\n// адаптивные шрифты\r\n\r\n@function strip-unit($number) {\r\n  @if type-of($number)=='number'and not unitless($number) {\r\n    @return $number / ($number * 0 + 1);\r\n  }\r\n\r\n  @return $number;\r\n}\r\n\r\n@function calcFluidFontSize($f-min, $f-max, $w-min, $w-max, $units: px) {\r\n  $f-min: strip-unit($f-min);\r\n  $f-max: strip-unit($f-max);\r\n  $w-min: strip-unit($w-min);\r\n  $w-max: strip-unit($w-max);\r\n\r\n  $k: ($f-max - $f-min)/($w-max - $w-min);\r\n  $b: $f-min - $k * $w-min;\r\n\r\n  $b: $b + $units;\r\n\r\n  @return calc(#{$k} * 100vw + #{$b});\r\n}\r\n\r\n@mixin fluidFontSize($f-min, $f-max, $w-min, $w-max, $fallback: false) {\r\n\r\n  font-size: $f-min;\r\n\r\n  @media (min-width: $w-min) {\r\n    @if ($fallback) {\r\n      font-size: $fallback;\r\n    }\r\n\r\n    font-size: calcFluidFontSize($f-min, $f-max, $w-min, $w-max, px);\r\n  }\r\n\r\n  @media (min-width: $w-max) {\r\n    font-size: $f-max;\r\n  }\r\n}\r\n\r\n//\r\n$xxxs:      420px;\r\n$xxs:      480px;\r\n$xs:       576px;\r\n$sm:       768px;\r\n$sm769:    769px;\r\n$md:       992px;\r\n$md1100:  1100px;\r\n$md1280:  1280px;\r\n$lg:      1300px;\r\n$xlg:     1600px;\r\n$xxlg:    1920px;\r\n\r\n$breakpoints: (xxxs: $xxxs,\r\nxxs: $xxs,\r\nxs: $xs,\r\nsm: $sm,\r\nsm769: $sm769,\r\nmd: $md,\r\nmd1100: $md1100,\r\nmd1280: $md1280,\r\nlg: $lg,\r\nxlg: $xlg,\r\nxxlg: $xxlg,\r\nxxlg100: $xxlg);\r\n\r\n\r\n// Media Queries\r\n\r\n\r\n//  RESPOND ABOVE\r\n//––––––––––––––––––––––––––––––––––––––––––––––––––\r\n\r\n// @include respond-above(sm) {}\r\n@mixin respond-above($breakpoint) {\r\n\r\n  // If the breakpoint exists in the map.\r\n  @if map-has-key($breakpoints, $breakpoint) {\r\n\r\n    // Get the breakpoint value.\r\n    $breakpoint-value: map-get($breakpoints, $breakpoint);\r\n\r\n    // Write the media query.\r\n    @media (min-width: $breakpoint-value) {\r\n      @content;\r\n    }\r\n\r\n    // If the breakpoint doesn't exist in the map.\r\n  }\r\n\r\n  @else {\r\n\r\n    // Log a warning.\r\n    @warn 'Invalid breakpoint: #{$breakpoint}.';\r\n  }\r\n}\r\n\r\n\r\n//\r\n//  RESPOND BELOW\r\n//––––––––––––––––––––––––––––––––––––––––––––––––––\r\n\r\n// @include respond-below(sm) {}\r\n@mixin respond-below($breakpoint) {\r\n\r\n  // If the breakpoint exists in the map.\r\n  @if map-has-key($breakpoints, $breakpoint) {\r\n\r\n    // Get the breakpoint value.\r\n    $breakpoint-value: map-get($breakpoints, $breakpoint);\r\n\r\n    // Write the media query.\r\n    @media (max-width: ($breakpoint-value - 1)) {\r\n      @content;\r\n    }\r\n\r\n    // If the breakpoint doesn't exist in the map.\r\n  }\r\n\r\n  @else {\r\n\r\n    // Log a warning.\r\n    @warn 'Invalid breakpoint: #{$breakpoint}.';\r\n  }\r\n}\r\n\r\n\r\n//\r\n//  RESPOND BETWEEN\r\n//––––––––––––––––––––––––––––––––––––––––––––––––––\r\n\r\n// @include respond-between(sm, md) {}\r\n@mixin respond-between($lower, $upper) {\r\n\r\n  // If both the lower and upper breakpoints exist in the map.\r\n  @if map-has-key($breakpoints, $lower) and map-has-key($breakpoints, $upper) {\r\n\r\n    // Get the lower and upper breakpoints.\r\n    $lower-breakpoint: map-get($breakpoints, $lower);\r\n    $upper-breakpoint: map-get($breakpoints, $upper);\r\n\r\n    // Write the media query.\r\n    @media (min-width: $lower-breakpoint) and (max-width: ($upper-breakpoint - 1)) {\r\n      @content;\r\n    }\r\n\r\n    // If one or both of the breakpoints don't exist.\r\n  }\r\n\r\n  @else {\r\n\r\n    // If lower breakpoint is invalid.\r\n    @if (map-has-key($breakpoints, $lower)==false) {\r\n\r\n      // Log a warning.\r\n      @warn 'Your lower breakpoint was invalid: #{$lower}.';\r\n    }\r\n\r\n    // If upper breakpoint is invalid.\r\n    @if (map-has-key($breakpoints, $upper)==false) {\r\n\r\n      // Log a warning.\r\n      @warn 'Your upper breakpoint was invalid: #{$upper}.';\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\n// шрифты\r\n\r\n@mixin ff($property, $map) {\r\n  $length: length(map-keys($map));\r\n\r\n  @if $length < 2 {\r\n    @error \"ff() $map requires at least values\";\r\n  }\r\n\r\n  $map: map-sort($map);\r\n  $keys: map-keys($map);\r\n  #{$property}: map-get($map, nth($keys, 1));\r\n\r\n  @for $i from 1 through $length - 1 {\r\n    @media (min-width: nth($keys, $i)) {\r\n      #{$property}: linear-interpolation((nth($keys, $i): map-get($map, nth($keys, $i)), nth($keys, $i + 1): map-get($map, nth($keys, $i + 1))));\r\n    }\r\n  }\r\n\r\n  @media (min-width: nth($keys, $length)) {\r\n    #{$property}: map-get($map, nth($keys, $length));\r\n  }\r\n}\r\n\r\n@function linear-interpolation($map) {\r\n  $keys: map-keys($map);\r\n\r\n  @if length($keys) !=2 {\r\n    @error \"linear-interpolation() $map must be exactly 2 values\";\r\n  }\r\n\r\n  $m: (map-get($map, nth($keys, 2)) - map-get($map, nth($keys, 1))) / (nth($keys, 2) - nth($keys, 1));\r\n  $b: map-get($map, nth($keys, 1)) - $m * nth($keys, 1);\r\n  $sign: \"+\";\r\n\r\n  @if $b < 0 {\r\n    $sign: \"-\";\r\n    $b: abs($b);\r\n  }\r\n\r\n  @return calc(#{$m * 100}vw #{$sign} #{$b});\r\n}\r\n\r\n@function list-sort($list) {\r\n  $sortedlist: ();\r\n\r\n  @while length($list)>0 {\r\n    $value: nth($list, 1);\r\n\r\n    @each $item in $list {\r\n      @if $item < $value {\r\n        $value: $item;\r\n      }\r\n    }\r\n\r\n    $sortedlist: append($sortedlist, $value, \"space\");\r\n    $list: list-remove($list, index($list, $value));\r\n  }\r\n\r\n  @return $sortedlist;\r\n}\r\n\r\n@function map-sort($map) {\r\n  $keys: list-sort(map-keys($map));\r\n  $sortedMap: ();\r\n\r\n  @each $key in $keys {\r\n    $sortedMap: map-merge($sortedMap, ($key: map-get($map, $key)));\r\n  }\r\n\r\n  @return $sortedMap;\r\n}\r\n\r\n@function list-remove($list, $index) {\r\n  $newList: ();\r\n\r\n  @for $i from 1 through length($list) {\r\n    @if $i !=$index {\r\n      $newList: append($newList, nth($list, $i), \"space\");\r\n    }\r\n  }\r\n\r\n  @return $newList;\r\n}\r\n\r\n\r\n// rem\r\n\r\n/**\r\n * Rem-converter mixin to convert px to rem\r\n */\r\n@mixin px-to-rem($pxValue, $property: \"font-size\", $standard-size: 16) {\r\n  #{$property}: $pxValue + px;\r\n  #{$property}: $pxValue/$standard-size + rem;\r\n}\r\n\r\n/**\r\n * Usages\r\n */\r\n\r\n// // 1.1 Using it with font-size (default property)\r\n// h1 {\r\n//   @include px-to-rem(32);\r\n// }\r\n\r\n\r\n// // 1.2 Using it with padding (custom property)\r\n// h1{\r\n//   @include px-to-rem(20, padding);\r\n\r\n// }\r\n\r\n\r\n$rem-baseline: 16px !default;\r\n$rem-fallback: false !default;\r\n$rem-px-only: false !default;\r\n\r\n@function rem-separator($list, $separator: false) {\r\n  @if $separator == \"comma\" or $separator == \"space\" {\r\n    @return append($list, null, $separator);\r\n  }\r\n\r\n  @if function-exists(\"list-separator\") == true {\r\n    @return list-separator($list);\r\n  }\r\n\r\n  // list-separator polyfill by Hugo Giraudel (https://sass-compatibility.github.io/#list_separator_function)\r\n  $test-list: ();\r\n  @each $item in $list {\r\n    $test-list: append($test-list, $item, space);\r\n  }\r\n\r\n  @return if($test-list == $list, space, comma);\r\n}\r\n\r\n@mixin rem-baseline($zoom: 100%) {\r\n  font-size: $zoom / 16px * $rem-baseline;\r\n}\r\n\r\n@function rem-convert($to, $values...) {\r\n  $result: ();\r\n  $separator: rem-separator($values);\r\n\r\n  @each $value in $values {\r\n    @if type-of($value) == \"number\" and unit($value) == \"rem\" and $to == \"px\" {\r\n      $result: append($result, $value / 1rem * $rem-baseline, $separator);\r\n    } @else if type-of($value) == \"number\" and unit($value) == \"px\" and $to == \"rem\" {\r\n      $result: append($result, $value / $rem-baseline * 1rem, $separator);\r\n    } @else if type-of($value) == \"list\" {\r\n      $value-separator: rem-separator($value);\r\n      $value: rem-convert($to, $value...);\r\n      $value: rem-separator($value, $value-separator);\r\n      $result: append($result, $value, $separator);\r\n    } @else {\r\n      $result: append($result, $value, $separator);\r\n    }\r\n  }\r\n\r\n  @return if(length($result) == 1, nth($result, 1), $result);\r\n}\r\n\r\n@function rem($values...) {\r\n  @if $rem-px-only {\r\n    @return rem-convert(px, $values...);\r\n  } @else {\r\n    @return rem-convert(rem, $values...);\r\n  }\r\n}\r\n\r\n@mixin rem($properties, $values...) {\r\n  @if type-of($properties) == \"map\" {\r\n    @each $property in map-keys($properties) {\r\n      @include rem($property, map-get($properties, $property));\r\n    }\r\n  } @else {\r\n    @each $property in $properties {\r\n      @if $rem-fallback or $rem-px-only {\r\n        #{$property}: rem-convert(px, $values...);\r\n      }\r\n      @if not $rem-px-only {\r\n        #{$property}: rem-convert(rem, $values...);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\n// Function px to vw\r\n",".block-w {\r\n  position: relative;\r\n  min-height: 10rem;\r\n  background-color: #ffffff;\r\n\r\n  &--br {\r\n    position: relative;\r\n    &::before {\r\n      position: absolute;\r\n      z-index: 1;\r\n      content: \"\";\r\n      top: 0;\r\n      left: 0;\r\n      width: 100%;\r\n      height: 0.0625rem;\r\n      border: 1px dashed #dddddd;\r\n    }\r\n    &::after {\r\n      position: absolute;\r\n      z-index: 1;\r\n      content: \"\";\r\n      bottom: 0;\r\n      left: 0;\r\n      width: 100%;\r\n      height: 0.0625rem;\r\n      border: 1px dashed #dddddd;\r\n    }\r\n  }\r\n\r\n  &__header {\r\n    position: absolute;\r\n    top: 10px;\r\n    left: 20px;\r\n\r\n    background-color: transparent;\r\n    color: #000000;\r\n    max-width: 100px;\r\n    font-size: 10px;\r\n    line-height: 10px;\r\n  }\r\n  &__id {\r\n    display: inline-block;\r\n    margin-bottom: 5px;\r\n    padding: 5px;\r\n    border-radius: 3px;\r\n    border: 1px solid #000000;\r\n  }\r\n\r\n  & .container-fluid {\r\n    opacity: 1;\r\n    transition: opacity 0.3s ease;\r\n    height: 100%;\r\n  }\r\n}\r\n",".block-name {\r\n  position: absolute;\r\n  top: .625rem;\r\n  left: .625rem;\r\n  max-width: 12.5rem;\r\n  background-color: rgba(0,0,0,0.7);\r\n  padding: 5px 10px;\r\n  font-size: 75%;\r\n  color: #ffffff;\r\n  border-radius: 5px;\r\n  opacity: 0;\r\n  &__text {\r\n    margin-right: .3125rem;\r\n  }\r\n}\r\n",".block-add {\r\n  position: absolute;\r\n  z-index: 3200;\r\n  bottom: -23px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 100%;\r\n\r\n  margin-top: 0;\r\n\r\n  opacity: 0;\r\n  transition: opacity 0.4s ease-out;\r\n\r\n  &--center {\r\n    height: 100%;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    margin: auto;\r\n  }\r\n\r\n  &__plus {\r\n    width: 45px;\r\n    height: 45px;\r\n    border-radius: 50%;\r\n    background: #fff;\r\n\r\n    & .button {\r\n      &:focus,\r\n      &:hover {\r\n        opacity: 0.8;\r\n        transition: 0.5s;\r\n      }\r\n    }\r\n  }\r\n  &__icon {\r\n    fill: $color-turquoise;\r\n    @include rem(\r\n      (\r\n        width: 45px,\r\n        height: 45px\r\n      )\r\n    );\r\n  }\r\n}\r\n",".block-control {\r\n  opacity: 0;\r\n  position: absolute;\r\n  top: 0;\r\n  right: 0;\r\n\r\n  &__group {\r\n    display: flex;\r\n  }\r\n  &__item {\r\n    position: relative;\r\n\r\n    @include rem(\r\n      (\r\n        margin: 10px 5px,\r\n        height: 40px,\r\n        width: 40px\r\n      )\r\n    );\r\n\r\n    &.active {\r\n      opacity: 1;\r\n    }\r\n  }\r\n\r\n  &__icon {\r\n    position: relative;\r\n    width: 15px;\r\n    height: 13px;\r\n\r\n    fill: #ffffff;\r\n    pointer-events: none;\r\n\r\n    &--dots {\r\n      top: 5px;\r\n      transform: rotate(90deg);\r\n    }\r\n    &--1 {\r\n      transform: rotate(180deg);\r\n    }\r\n  }\r\n  &__box-btn {\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n    width: 100%;\r\n    height: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n\r\n    border-radius: 50%;\r\n    overflow: hidden;\r\n    background: darken($color-turquoise, 5);\r\n  }\r\n  &__btn {\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n\r\n    padding: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n\r\n    border-radius: 50%;\r\n    overflow: hidden;\r\n    line-height: 0.8;\r\n    background: darken($color-turquoise, 5);\r\n\r\n    opacity: 0.6;\r\n    transition: 1s;\r\n    cursor: pointer;\r\n    &--arrow {\r\n      height: 50%;\r\n      border-radius: 0;\r\n      &:first-child {\r\n        top: 10px;\r\n\r\n        & .block-control__icon {\r\n          top: 2px;\r\n        }\r\n      }\r\n      &:last-child {\r\n        bottom: -10px;\r\n        top: auto;\r\n\r\n        & .block-control__icon {\r\n          top: -2px;\r\n        }\r\n      }\r\n    }\r\n\r\n    &:hover {\r\n      opacity: 1;\r\n      background: $color-turquoise;\r\n    }\r\n  }\r\n}\r\n\r\n.block-control__item.active .block-control__btn {\r\n  opacity: 1;\r\n  background: $color-turquoise;\r\n}\r\n\r\n.block-control__item.active .bl-dropdown {\r\n  display: block;\r\n}\r\n",".bl-dropdown {\r\n  display: none;\r\n  position: absolute;\r\n  right: 0;\r\n  top: 55px;\r\n  background: rgba(0, 0, 0, 0.7);\r\n  width: 150px;\r\n  min-height: 100px;\r\n  border-radius: 5px;\r\n\r\n  &::before {\r\n    content: \"\";\r\n    position: absolute;\r\n    right: 10px;\r\n    top: -20px;\r\n    z-index: 2;\r\n    border: 10px solid transparent;\r\n    border-bottom: 10px solid rgba(0, 0, 0, 0.7);\r\n  }\r\n  &__list {\r\n    @include listReset();\r\n    padding: 10px;\r\n  }\r\n  &__item {\r\n    font-size: 14px;\r\n    font-weight: 600;\r\n    color: #ffffff;\r\n  }\r\n  &__btn {\r\n    color: #ffffff;\r\n    cursor: pointer;\r\n  }\r\n  &__icon {\r\n    margin-right: 10px;\r\n    width: 17px;\r\n    height: 17px;\r\n\r\n    fill: #ffffff;\r\n  }\r\n}\r\n\r\n.bl-dropdown__item:focus .bl-dropdown__btn,\r\n.bl-dropdown__item:hover .bl-dropdown__btn,\r\n.bl-dropdown__item:active .bl-dropdown__btn {\r\n  color: $color-turquoise;\r\n  transition: 0.5s;\r\n}\r\n.bl-dropdown__item:focus .bl-dropdown__icon,\r\n.bl-dropdown__item:hover .bl-dropdown__icon,\r\n.bl-dropdown__item:active .bl-dropdown__icon {\r\n  fill: $color-turquoise;\r\n  transition: 0.5s;\r\n}\r\n"]}