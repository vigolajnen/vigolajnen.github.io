{"version":3,"sources":["utils.scss","fonts.scss","base.scss","main.min.css","mixins.scss","blocks/button.scss","blocks/link.scss","blocks/title.scss","blocks/promo.scss","blocks/benefits.scss","blocks/block.scss","blocks/form.scss","blocks/trading.scss","blocks/slider.scss","blocks/section.scss"],"names":[],"mappings":"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","file":"main.min.css","sourcesContent":[".visually-hidden {\r\n  position: absolute;\r\n  overflow: hidden;\r\n  clip: rect(0 0 0 0);\r\n  width: 1px;\r\n  height: 1px;\r\n  margin: -1px;\r\n  padding: 0;\r\n  white-space: nowrap;\r\n  border: 0;\r\n  clip-path: inset(100%);\r\n}\r\n","@font-face {\r\n  font-family: $mainFont;\r\n  font-display: auto;\r\n  src: url(\"../fonts/OpenSans-Regular.woff2\") format(\"woff2\"),\r\n    url(\"../fonts/OpenSans-Regular.woff\") format(\"woff\");\r\n  font-weight: 300;\r\n  font-style: normal;\r\n}\r\n@font-face {\r\n  font-family: $mainFont-bold;\r\n  font-display: auto;\r\n  src: url(\"../fonts/OpenSans-Bold.woff2\") format(\"woff2\"),\r\n    url(\"../fonts/OpenSans-Bold.woff\") format(\"woff\");\r\n  font-weight: 600;\r\n  font-style: normal;\r\n}\r\n@font-face {\r\n  font-family: $mainFont-semibold;\r\n  font-display: auto;\r\n  src: url(\"../fonts/OpenSans-SemiBold.woff2\") format(\"woff2\"),\r\n    url(\"../fonts/OpenSans-SemiBold.woff\") format(\"woff\");\r\n  font-weight: 700;\r\n  font-style: normal;\r\n}\r\n@font-face {\r\n  font-family: $secondFont;\r\n  font-display: auto;\r\n  src: url(\"../fonts/GothamPro-Light.woff2\") format(\"woff2\"),\r\n    url(\"../fonts/GothamPro-Light.woff\") format(\"woff\");\r\n  font-weight: 300;\r\n  font-style: normal;\r\n}\r\n@font-face {\r\n  font-family: $secondFont-bold;\r\n  font-display: auto;\r\n  src: url(\"../fonts/GothamPro-Bold.woff2\") format(\"woff2\"),\r\n    url(\"../fonts/GothamPro-Bold.woff\") format(\"woff\");\r\n  font-weight: 600;\r\n  font-style: normal;\r\n}","*,\r\n*::before,\r\n*::after {\r\n  box-sizing: border-box;\r\n  outline: none;\r\n}\r\n\r\n* {\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n\r\nhtml,\r\nbody {\r\n  height: 100%;\r\n}\r\n\r\nbody {\r\n  position: relative;\r\n  margin: 0;\r\n  padding: 0;\r\n  font-family: $mainFont;\r\n  font-size: $mainFontSize;\r\n  font-weight: $mainFontWeight;\r\n  line-height: $mainLineHeight;\r\n  color: $text-color;\r\n\r\n  scroll-behavior: smooth;\r\n}\r\n\r\nimg {\r\n  max-width: 100%;\r\n  height: auto;\r\n  object-fit: cover;\r\n}\r\n\r\nh2:not([class]),\r\nh3:not([class]),\r\nh4:not([class]),\r\nh5:not([class]),\r\nh6:not([class]) {\r\n  margin-bottom: $padding-and-margin;\r\n  font-family: $secondFont;\r\n  @include ff(\"font-size\", $title-fz);\r\n}\r\n\r\np {\r\n  @include ff(\"font-size\", $text-fz);\r\n}\r\n\r\n// footer к низу\r\n\r\n.wrapper {\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  width: 100%;\r\n  min-height: 100%;\r\n}\r\n\r\n.container {\r\n  width: 100%;\r\n\r\n  padding-right: 15px;\r\n  padding-left: 15px;\r\n  margin-right: auto;\r\n  margin-left: auto;\r\n}\r\n@media (min-width: 576px) {\r\n  .container {\r\n    max-width: 540px;\r\n  }\r\n}\r\n@media (min-width: 768px) {\r\n  .container {\r\n    max-width: 720px;\r\n  }\r\n}\r\n@media (min-width: 992px) {\r\n  .container {\r\n    max-width: 960px;\r\n  }\r\n}\r\n@media (min-width: 1200px) {\r\n  .container {\r\n    max-width: 1140px;\r\n  }\r\n}\r\n@media (min-width: 1500px) {\r\n  .container {\r\n    max-width: 1500px;\r\n  }\r\n}\r\n\r\n.container-fluid {\r\n  width: 100%;\r\n  padding-right: 15px;\r\n  padding-left: 15px;\r\n  margin-right: auto;\r\n  margin-left: auto;\r\n}\r\n",".visually-hidden{position:absolute;overflow:hidden;clip:rect(0 0 0 0);width:1px;height:1px;margin:-1px;padding:0;white-space:nowrap;border:0;-webkit-clip-path:inset(100%);clip-path:inset(100%)}@font-face{font-family:\"Open Sans Regular\",Arial,sans-serif;font-display:auto;src:url(../fonts/OpenSans-Regular.woff2) format(\"woff2\"),url(../fonts/OpenSans-Regular.woff) format(\"woff\");font-weight:300;font-style:normal}@font-face{font-family:\"Open Sans Bold\",Arial,sans-serif;font-display:auto;src:url(../fonts/OpenSans-Bold.woff2) format(\"woff2\"),url(../fonts/OpenSans-Bold.woff) format(\"woff\");font-weight:600;font-style:normal}@font-face{font-family:\"Open Sans SemiBold\",Arial,sans-serif;font-display:auto;src:url(../fonts/OpenSans-SemiBold.woff2) format(\"woff2\"),url(../fonts/OpenSans-SemiBold.woff) format(\"woff\");font-weight:700;font-style:normal}@font-face{font-family:\"Gotham Pro Light\",Arial,sans-serif;font-display:auto;src:url(../fonts/GothamPro-Light.woff2) format(\"woff2\"),url(../fonts/GothamPro-Light.woff) format(\"woff\");font-weight:300;font-style:normal}@font-face{font-family:\"Gotham Pro Bold\",Arial,sans-serif;font-display:auto;src:url(../fonts/GothamPro-Bold.woff2) format(\"woff2\"),url(../fonts/GothamPro-Bold.woff) format(\"woff\");font-weight:600;font-style:normal}*,::after,::before{-webkit-box-sizing:border-box;box-sizing:border-box;outline:0}*{margin:0;padding:0}body,html{height:100%}body{position:relative;margin:0;padding:0;font-family:\"Open Sans Regular\",Arial,sans-serif;font-size:16px;font-weight:400;line-height:24px;color:#1a1a1a;scroll-behavior:smooth}img{max-width:100%;height:auto;-o-object-fit:cover;object-fit:cover}h2:not([class]),h3:not([class]),h4:not([class]),h5:not([class]),h6:not([class]){margin-bottom:1.25rem;font-family:\"Gotham Pro Light\",Arial,sans-serif;font-size:30px}@media (min-width:375px){h2:not([class]),h3:not([class]),h4:not([class]),h5:not([class]),h6:not([class]){font-size:calc(2.24719vw + 21.57303px)}}@media (min-width:2600px){h2:not([class]),h3:not([class]),h4:not([class]),h5:not([class]),h6:not([class]){font-size:80px}}p{font-size:16px}@media (min-width:375px){p{font-size:calc(.35955vw + 14.65169px)}}@media (min-width:2600px){p{font-size:24px}}.wrapper{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;width:100%;min-height:100%}.container{width:100%;padding-right:15px;padding-left:15px;margin-right:auto;margin-left:auto}@media (min-width:576px){.container{max-width:540px}}@media (min-width:768px){.container{max-width:720px}}@media (min-width:992px){.container{max-width:960px}}@media (min-width:1200px){.container{max-width:1140px}}@media (min-width:1500px){.container{max-width:1500px}}.container-fluid{width:100%;padding-right:15px;padding-left:15px;margin-right:auto;margin-left:auto}.button{display:inline-block;vertical-align:middle;padding:.7rem 1.25rem;font-size:14px;font-family:\"Open Sans Bold\",Arial,sans-serif;font-weight:600;color:#fff;background:-webkit-gradient(linear,left bottom,left top,from(#854399),color-stop(48%,#9b4499),to(#b14599));background:linear-gradient(0deg,#854399 0,#9b4499 48%,#b14599 100%);border-radius:20px;-webkit-box-shadow:0 0 20px 2px #9b4499;box-shadow:0 0 20px 2px #9b4499;text-transform:uppercase;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;border:none;outline:0;-webkit-transition:1s;transition:1s}@media (min-width:375px){.button{font-size:calc(.08989vw + 13.66292px)}}@media (min-width:2600px){.button{font-size:16px}}.button:focus,.button:hover{outline:0;opacity:.5}.link{display:inline-block;vertical-align:middle;background-color:transparent;line-height:normal;color:#76c0f3;border-radius:0;text-decoration:none;-webkit-transition:.4s;transition:.4s}.link:focus,.link:hover{text-decoration:none;color:#4e98cb}.title{margin-bottom:40px;font-family:\"Gotham Pro Light\",Arial,sans-serif;line-height:normal;font-weight:400;font-size:30px}@media (min-width:375px){.title{margin-bottom:calc(2.69663vw + 29.88764px)}}@media (min-width:2600px){.title{margin-bottom:100px}}@media (min-width:375px){.title{font-size:calc(2.24719vw + 21.57303px)}}@media (min-width:2600px){.title{font-size:80px}}.title--uppercase{text-transform:uppercase}.title span{font-family:\"Gotham Pro Bold\",Arial,sans-serif;font-weight:600}.promo{position:relative;padding-top:2rem;margin-bottom:var(--mb);color:#fff;background:-webkit-gradient(linear,left bottom,left top,from(#020024),color-stop(52%,#3c2440),to(#73346b));background:linear-gradient(0deg,#020024 0,#3c2440 52%,#73346b 100%);background-image:url(../img/promo/background.jpg);background-size:cover;background-position:top;background-repeat:no-repeat;background-color:#3c2440}@media (min-width:769px){.promo{padding-top:5rem}}.promo__inner{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-flow:row wrap;flex-flow:row wrap;margin-left:-15px;margin-right:-15px;min-height:50vh}@media (min-width:769px){.promo__inner{min-height:75vh}}.promo__logo{padding-left:15px;padding-right:15px;width:100%}@media (min-width:769px){.promo__logo{margin-bottom:5rem}}.promo__text{margin-bottom:3rem;padding-left:15px;padding-right:15px;width:100%}@media (min-width:769px){.promo__text{width:50%}}@media (min-width:900px){.promo__text{width:58.33333%}}@media (min-width:769px){.promo__text{margin-bottom:5rem}}.promo .button{margin-top:3rem}.promo__slider{padding-left:15px;padding-right:15px;width:100%}@media (min-width:769px){.promo__slider{width:50%}}@media (min-width:900px){.promo__slider{width:41.66667%}}.benefits{position:relative;text-align:center}.benefits::after,.benefits::before{content:\"\";position:absolute;background-repeat:no-repeat;background-position:0 0;background-size:100%;width:100px;height:100px;z-index:2}.benefits::before{bottom:20%;left:15px;background-image:url(../img/benefits/bg-box-left.png)}.benefits::after{top:40%;right:0;height:200px;width:200px;background-image:url(../img/benefits/bg-box-right.png)}@media (min-width:769px){.benefits{padding:5rem 0}}.benefits .container{padding-top:2rem;background-image:url(../img/benefits/bg-line.png);background-repeat:no-repeat;background-position:5% 0;background-size:50%}.benefits__list{display:-webkit-box;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;padding:0;margin:0;list-style-type:none;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-flow:row wrap;flex-flow:row wrap;margin-left:-15px;margin-right:-15px}@media (min-width:769px){.benefits__list{margin:6rem 0 0}}@media (min-width:1200px){.benefits__list{margin:10rem 0 0}}.benefits__item{position:relative;display:block;padding-top:5rem;margin-bottom:40px;padding-left:15px;padding-right:15px;width:100%}@media (min-width:375px){.benefits__item{margin-bottom:calc(2.69663vw + 29.88764px)}}@media (min-width:2600px){.benefits__item{margin-bottom:100px}}@media (min-width:500px){.benefits__item{width:50%}}@media (min-width:769px){.benefits__item{width:50%}}@media (min-width:900px){.benefits__item{width:33.33333%}}.benefits__item:last-child{margin-bottom:0}@media (min-width:769px){.benefits__item:last-child{margin-bottom:40px}}@media (min-width:769px) and (min-width:375px){.benefits__item:last-child{margin-bottom:calc(2.69663vw + 29.88764px)}}@media (min-width:769px) and (min-width:2600px){.benefits__item:last-child{margin-bottom:100px}}.benefits__item::before{content:\"\";position:absolute;top:0;left:50%;transform:translateX(-50%);-webkit-transform:translateX(-50%);-moz-transform:translateX(-50%);-ms-transform:translateX(-50%);-o-transform:translateX(-50%);width:100%;height:4rem;background-repeat:no-repeat;background-position:center;background-size:contain}.benefits__item:nth-child(1)::before{background-image:url(../img/icons/icon-01.png)}.benefits__item:nth-child(2)::before{background-image:url(../img/icons/icon-03.png)}.benefits__item:nth-child(3)::before{background-image:url(../img/icons/icon-05.png)}.benefits__item:nth-child(4)::before{background-image:url(../img/icons/icon-02.png)}.benefits__item:nth-child(5)::before{background-image:url(../img/icons/icon-04.png)}.benefits__item:nth-child(6)::before{background-image:url(../img/icons/icon-06.png)}.benefits__item span{display:block;max-width:18rem;margin:0 auto}@media (min-width:769px){.benefits__item span{font-size:1.5rem}}.block{padding:var(--padding-bl)}.block__inner{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-flow:row wrap;flex-flow:row wrap;margin-left:-15px;margin-right:-15px}.block__item{position:relative;padding-left:15px;padding-right:15px;width:100%}@media (min-width:769px){.block__item{width:50%}}.form{position:relative;padding-top:1rem;min-height:500px;background-image:url(../img/form/m-bg.jpg);background-size:100% 100%;background-position:0 0;background-repeat:no-repeat}@media (max-width:560px){.form{max-width:300px;margin:0 auto}}@media (min-width:560px){.form{background-image:url(../img/form/form.png)}}.form__inner{margin:2rem 1.5rem;background-color:#fff;border:none;overflow:hidden;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;max-width:100%;text-align:center}@media (min-width:560px){.form__inner{margin-left:29%;margin-right:37%}}@media (min-width:769px){.form__inner{max-width:100%;max-height:450px;margin-left:29%;margin-right:37%}}@media (min-width:1200px){.form__inner{max-width:100%;margin-left:29%;margin-right:37%}}.form__list{position:relative;z-index:3;padding:0;margin:0;list-style-type:none;overflow-y:auto;height:100%;max-width:100%}.form__item{margin-bottom:.7rem}.form__field{padding:5px;width:100%;border-radius:0;border:none;-webkit-box-shadow:0 3px 3px -3px #333;box-shadow:0 3px 3px -3px #333}.form__field:focus,.form__field:hover{-webkit-box-shadow:0 3px 3px -3px #854399;box-shadow:0 3px 3px -3px #854399}.form__field:focus::-webkit-input-placeholder,.form__field:hover::-webkit-input-placeholder{color:#854399}.form__field:focus::-moz-placeholder,.form__field:hover::-moz-placeholder{color:#854399}.form__field:focus:-moz-placeholder,.form__field:hover:-moz-placeholder{color:#854399}.form__field:focus:-ms-input-placeholder,.form__field:hover:-ms-input-placeholder{color:#854399}.form__comment{padding:5px;width:100%;resize:none;border-radius:0;border:none;-webkit-box-shadow:0 3px 3px -3px #333;box-shadow:0 3px 3px -3px #333}.form .button{margin-top:1rem}.form h3{font-size:1rem}.trading{position:relative}.trading::after,.trading::before{content:'';position:absolute;background-repeat:no-repeat;background-position:0 0;background-size:100%;width:100px;height:100px;z-index:0}.trading::before{top:20%;left:0;height:200px;width:200px;background-image:url(../img/trading/bg-box-left.png)}.trading::after{top:30%;right:15px;background-image:url(../img/trading/bg-box-right.png)}.trading .container{background-image:url(../img/trading/bg-line.png);background-repeat:no-repeat;background-position:95% bottom;background-size:40%}.slider{position:relative}.slider::before{content:\"\";position:absolute;z-index:2;bottom:0;right:0;height:120px;width:120px;background-size:contain;background-repeat:no-repeat;background-position:center;background-image:url(../img/slider/cow.png)}@media (min-width:769px){.slider::before{height:200px;width:200px}}.slider .swiper-container{height:100%;width:100%;display:none}@media (min-width:769px){.slider .swiper-container{display:block}}.slider .swiper-slide{background-size:contain;background-repeat:no-repeat;background-position:center bottom}.slider .swiper-slide::after{content:\"\";position:absolute;bottom:0;right:0;top:0;left:0;height:100%;width:100%;background-size:100%;background-repeat:repeat-x;background-position:center;background-image:url(../img/slider/slider-bg.png)}.section{position:relative;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}.section__inner{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-flow:row wrap;flex-flow:row wrap;margin-left:-15px;margin-right:-15px;padding-top:50px;padding-bottom:50px}@media (min-width:375px){.section__inner{padding-top:calc(2.24719vw + 41.57303px)}}@media (min-width:2600px){.section__inner{padding-top:100px}}@media (min-width:375px){.section__inner{padding-bottom:calc(2.24719vw + 41.57303px)}}@media (min-width:2600px){.section__inner{padding-bottom:100px}}.section__info{position:relative;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;margin-bottom:1.25rem;padding-left:15px;padding-right:15px;width:100%}@media (min-width:769px){.section__info{width:41.66667%}}@media (min-width:900px){.section__info{width:50%}}@media (min-width:769px){.section__info{-webkit-box-pack:start;-ms-flex-pack:start;justify-content:flex-start;margin-bottom:0}}.section__pic{position:relative;width:100%;height:350px;background-repeat:no-repeat;background-position:top;background-size:contain;padding-left:15px;padding-right:15px;width:100%}@media (min-width:769px){.section__pic{width:58.33333%}}@media (min-width:900px){.section__pic{width:50%}}@media (min-width:769px){.section__pic{position:absolute;right:0;top:0;min-height:20rem;-webkit-transform:translate(150%,0);transform:translate(150%,0);background-position:center}}.section__pic::before{content:'';position:absolute;z-index:1;bottom:0;right:40%;width:12rem;height:15rem;background-repeat:no-repeat;background-position:top;background-image:url(../img/trading/cow.png);background-size:contain;-webkit-transform:translate(40%,0);transform:translate(40%,0)}@media (min-width:769px){.section__pic::before{bottom:-45px;background-position:center}}.section__caption{margin-bottom:2.5rem;font-family:\"Open Sans SemiBold\",Arial,sans-serif;font-size:16px;opacity:.5;color:#854399;text-transform:uppercase;letter-spacing:6px}@media (min-width:375px){.section__caption{font-size:calc(.49438vw + 14.14607px)}}@media (min-width:2600px){.section__caption{font-size:27px}}.section__text{margin-bottom:3rem}.section .title{max-width:28rem}.section__form{margin-top:2rem;padding-left:15px;padding-right:15px;width:100%}@media (min-width:769px){.section__form{width:58.33333%}}@media (min-width:900px){.section__form{width:50%}}@media (min-width:769px){.section__form{margin-top:0}}.section .button{-ms-flex-item-align:center;align-self:center}@media (min-width:769px){.section .button{-ms-flex-item-align:start;align-self:flex-start}}\n/*# sourceMappingURL=main.min.css.map */\n","// контрольные точки\r\n// пример использования\r\n// .my-box {\r\n//   padding: 10px;\r\n\r\n//   @include for-size(desktop-up) {\r\n//     padding: 20px;\r\n//   }\r\n// }\r\n@mixin for-size($size) {\r\n  @if $size == phone-only {\r\n    @media (max-width: 599px) {\r\n      @content;\r\n    }\r\n  } @else if $size == tablet-portrait-up {\r\n    @media (min-width: 769px) {\r\n      @content;\r\n    }\r\n  } @else if $size == tablet-portrait-down {\r\n    @media (max-width: 768px) {\r\n      @content;\r\n    }\r\n  } @else if $size == tablet-landscape-up {\r\n    @media (min-width: 900px) {\r\n      @content;\r\n    }\r\n  } @else if $size == tablet-landscape-down {\r\n    @media (max-width: 900px) {\r\n      @content;\r\n    }\r\n  } @else if $size == desktop-up {\r\n    @media (min-width: 1200px) {\r\n      @content;\r\n    }\r\n  } @else if $size == desktop-down {\r\n    @media (max-width: 1199px) {\r\n      @content;\r\n    }\r\n  } @else if $size == big-desktop-up {\r\n    @media (min-width: 1800px) {\r\n      @content;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\n// списиок\r\n\r\n@mixin listReset() {\r\n  list-style: none;\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n// ссылки\r\n\r\n@mixin linkReset() {\r\n  text-decoration: none;\r\n}\r\n\r\n// цвета\r\n\r\n@function darker($color, $tone) {\r\n  $adjust: -16 * $tone;\r\n  @return adjust-color($color, $red: $adjust, $green: $adjust, $blue: $adjust);\r\n}\r\n\r\n@function lighter($color, $tone) {\r\n  $adjust: 16 * $tone;\r\n  @return adjust-color($color, $red: $adjust, $green: $adjust, $blue: $adjust);\r\n}\r\n\r\n//hex to rgba\r\n\r\n// .element {<br>\r\n// @include background-opacity(#000, 0.3);<br>\r\n// }\r\n\r\n@mixin background-opacity($color, $opacity: 0.5) {\r\n  background: $color; /* На всякий случай */\r\n  background: rgba($color, $opacity);\r\n}\r\n\r\n// адаптивные шрифты\r\n\r\n@function strip-unit($number) {\r\n  @if type-of($number) == \"number\" and not unitless($number) {\r\n    @return $number / ($number * 0 + 1);\r\n  }\r\n\r\n  @return $number;\r\n}\r\n\r\n@function calcFluidFontSize($f-min, $f-max, $w-min, $w-max, $units: px) {\r\n  $f-min: strip-unit($f-min);\r\n  $f-max: strip-unit($f-max);\r\n  $w-min: strip-unit($w-min);\r\n  $w-max: strip-unit($w-max);\r\n\r\n  $k: ($f-max - $f-min)/ ($w-max - $w-min);\r\n  $b: $f-min - $k * $w-min;\r\n\r\n  $b: $b + $units;\r\n\r\n  @return calc(#{$k} * 100vw + #{$b});\r\n}\r\n\r\n@mixin fluidFontSize($f-min, $f-max, $w-min, $w-max, $fallback: false) {\r\n  font-size: $f-min;\r\n\r\n  @media (min-width: $w-min) {\r\n    @if ($fallback) {\r\n      font-size: $fallback;\r\n    }\r\n\r\n    font-size: calcFluidFontSize($f-min, $f-max, $w-min, $w-max, px);\r\n  }\r\n\r\n  @media (min-width: $w-max) {\r\n    font-size: $f-max;\r\n  }\r\n}\r\n\r\n// шрифты\r\n\r\n@mixin ff($property, $map) {\r\n  $length: length(map-keys($map));\r\n\r\n  @if $length < 2 {\r\n    @error \"ff() $map requires at least values\";\r\n  }\r\n\r\n  $map: map-sort($map);\r\n  $keys: map-keys($map);\r\n  #{$property}: map-get($map, nth($keys, 1));\r\n\r\n  @for $i from 1 through $length - 1 {\r\n    @media (min-width: nth($keys, $i)) {\r\n      #{$property}: linear-interpolation(\r\n        (\r\n          nth($keys, $i): map-get($map, nth($keys, $i)),\r\n          nth($keys, $i + 1): map-get($map, nth($keys, $i + 1))\r\n        )\r\n      );\r\n    }\r\n  }\r\n\r\n  @media (min-width: nth($keys, $length)) {\r\n    #{$property}: map-get($map, nth($keys, $length));\r\n  }\r\n}\r\n\r\n@function linear-interpolation($map) {\r\n  $keys: map-keys($map);\r\n\r\n  @if length($keys) !=2 {\r\n    @error \"linear-interpolation() $map must be exactly 2 values\";\r\n  }\r\n\r\n  $m: (map-get($map, nth($keys, 2)) - map-get($map, nth($keys, 1))) /\r\n    (nth($keys, 2) - nth($keys, 1));\r\n  $b: map-get($map, nth($keys, 1)) - $m * nth($keys, 1);\r\n  $sign: \"+\";\r\n\r\n  @if $b < 0 {\r\n    $sign: \"-\";\r\n    $b: abs($b);\r\n  }\r\n\r\n  @return calc(#{$m * 100}vw #{$sign} #{$b});\r\n}\r\n\r\n@function list-sort($list) {\r\n  $sortedlist: ();\r\n\r\n  @while length($list) >0 {\r\n    $value: nth($list, 1);\r\n\r\n    @each $item in $list {\r\n      @if $item < $value {\r\n        $value: $item;\r\n      }\r\n    }\r\n\r\n    $sortedlist: append($sortedlist, $value, \"space\");\r\n    $list: list-remove($list, index($list, $value));\r\n  }\r\n\r\n  @return $sortedlist;\r\n}\r\n\r\n@function map-sort($map) {\r\n  $keys: list-sort(map-keys($map));\r\n  $sortedMap: ();\r\n\r\n  @each $key in $keys {\r\n    $sortedMap: map-merge(\r\n      $sortedMap,\r\n      (\r\n        $key: map-get($map, $key)\r\n      )\r\n    );\r\n  }\r\n\r\n  @return $sortedMap;\r\n}\r\n\r\n@function list-remove($list, $index) {\r\n  $newList: ();\r\n\r\n  @for $i from 1 through length($list) {\r\n    @if $i !=$index {\r\n      $newList: append($newList, nth($list, $i), \"space\");\r\n    }\r\n  }\r\n\r\n  @return $newList;\r\n}\r\n\r\n// rem\r\n\r\n/**\r\n * Rem-converter mixin to convert px to rem\r\n */\r\n@mixin px-to-rem($pxValue, $property: \"font-size\", $standard-size: 16) {\r\n  #{$property}: $pxValue + px;\r\n  #{$property}: $pxValue/$standard-size + rem;\r\n}\r\n\r\n/**\r\n * Usages\r\n */\r\n\r\n// // 1.1 Using it with font-size (default property)\r\n// h1 {\r\n//   @include px-to-rem(32);\r\n// }\r\n\r\n// // 1.2 Using it with padding (custom property)\r\n// h1{\r\n//   @include px-to-rem(20, padding);\r\n\r\n// }\r\n\r\n$rem-baseline: 16px !default;\r\n$rem-fallback: false !default;\r\n$rem-px-only: false !default;\r\n\r\n@function rem-separator($list, $separator: false) {\r\n  @if $separator == \"comma\" or $separator == \"space\" {\r\n    @return append($list, null, $separator);\r\n  }\r\n\r\n  @if function-exists(\"list-separator\") == true {\r\n    @return list-separator($list);\r\n  }\r\n\r\n  // list-separator polyfill by Hugo Giraudel (https://sass-compatibility.github.io/#list_separator_function)\r\n  $test-list: ();\r\n  @each $item in $list {\r\n    $test-list: append($test-list, $item, space);\r\n  }\r\n\r\n  @return if($test-list == $list, space, comma);\r\n}\r\n\r\n@mixin rem-baseline($zoom: 100%) {\r\n  font-size: $zoom / 16px * $rem-baseline;\r\n}\r\n\r\n@function rem-convert($to, $values...) {\r\n  $result: ();\r\n  $separator: rem-separator($values);\r\n\r\n  @each $value in $values {\r\n    @if type-of($value) == \"number\" and unit($value) == \"rem\" and $to == \"px\" {\r\n      $result: append($result, $value / 1rem * $rem-baseline, $separator);\r\n    } @else if\r\n      type-of($value) ==\r\n      \"number\" and\r\n      unit($value) ==\r\n      \"px\" and\r\n      $to ==\r\n      \"rem\"\r\n    {\r\n      $result: append($result, $value / $rem-baseline * 1rem, $separator);\r\n    } @else if type-of($value) == \"list\" {\r\n      $value-separator: rem-separator($value);\r\n      $value: rem-convert($to, $value...);\r\n      $value: rem-separator($value, $value-separator);\r\n      $result: append($result, $value, $separator);\r\n    } @else {\r\n      $result: append($result, $value, $separator);\r\n    }\r\n  }\r\n\r\n  @return if(length($result) == 1, nth($result, 1), $result);\r\n}\r\n\r\n@function rem($values...) {\r\n  @if $rem-px-only {\r\n    @return rem-convert(px, $values...);\r\n  } @else {\r\n    @return rem-convert(rem, $values...);\r\n  }\r\n}\r\n\r\n@mixin rem($properties, $values...) {\r\n  @if type-of($properties) == \"map\" {\r\n    @each $property in map-keys($properties) {\r\n      @include rem($property, map-get($properties, $property));\r\n    }\r\n  } @else {\r\n    @each $property in $properties {\r\n      @if $rem-fallback or $rem-px-only {\r\n        #{$property}: rem-convert(px, $values...);\r\n      }\r\n      @if not $rem-px-only {\r\n        #{$property}: rem-convert(rem, $values...);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n// Function px to vw\r\n\r\n\r\n// grid\r\n\r\n$grid: (\r\n  breakpoints: (\r\n    xs: 0px,\r\n    xsm: 500px,\r\n    sm: 769px,\r\n    md: 900px,\r\n    lg: 1200px,\r\n    xl: 1800px\r\n  ),\r\n  columns: 12,\r\n  gap: 15px,\r\n  container: 15px,\r\n  box-sizing: border-box,\r\n  mode: flex\r\n);\r\n\r\n@function fastGridListToMap($list, $settings) {\r\n  $result: ();\r\n  $i: 0;\r\n  $breakpoints: map-get($settings, breakpoints);\r\n  @each $breakpoint, $value in $breakpoints {\r\n    $i: $i + 1;\r\n    $value: if(length($list) >= $i, nth($list, $i), null);\r\n    @if $value != null {\r\n      $result: map-merge($result, ($breakpoint: $value));\r\n    }\r\n  }\r\n  @return $result;\r\n}\r\n\r\n@function fastGridNormalizeSpans($spans, $settings) {\r\n  $columns: map-get($settings, columns);\r\n  @if type-of($spans) != map {\r\n    $len: length($spans);\r\n    @if $len >= 3 and nth($spans, $len - 1) == 'of' {\r\n      $columns: nth($spans, $len);\r\n      @if ($len > 3) {\r\n        $spans: set-nth($spans, $len, null);\r\n        $spans: set-nth($spans, $len - 1, null);\r\n        $spans: fastGridListToMap($spans, $settings);\r\n      } @else {\r\n        $spans: nth($spans, 1);\r\n      }\r\n    } @else {\r\n      $spans: fastGridListToMap($spans, $settings);\r\n    }\r\n  }\r\n  @return $spans, $columns;\r\n}\r\n\r\n// get width for breakpoint\r\n@function grid-width($breakpoint, $settings: null) {\r\n  $settings: $grid !default;\r\n  @return map-get(map-get($settings, breakpoints), $breakpoint);\r\n}\r\n\r\n// apply breakpoint rules\r\n@mixin grid-breakpoint($breakpoint, $settings: null) {\r\n  @media (min-width: grid-width($breakpoint, $settings)) {\r\n    @content\r\n  }\r\n}\r\n\r\n@mixin grid-container($from: null, $to: null, $settings: null) {\r\n  $settings: if($settings != null, map-merge($grid, $settings), $grid);\r\n  $gap: map-get($settings, container);\r\n  $map: map_get($settings, breakpoints);\r\n  width: 100%;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n\r\n  @if type-of($gap) == number {\r\n    padding-left: $gap;\r\n    padding-right: $gap;\r\n  }\r\n  @if (type-of($gap) == list) {\r\n    $gap: fastGridListToMap($gap, $settings);\r\n  }\r\n\r\n  $found: false;\r\n  $break: false;\r\n  @each $breakpoint, $minWidth in $map {\r\n    @if $breakpoint == $from {\r\n      $found: true;\r\n    }\r\n    @if $found == true and $break == false or (type-of($from) == list and index($from, $breakpoint) != null) {\r\n      @if $minWidth > 0 {\r\n        @media (min-width: $minWidth) {\r\n          max-width: $minWidth;\r\n        }\r\n      } @else {\r\n        max-width: $minWidth;\r\n      }\r\n    }\r\n    @if type-of($gap) == map {\r\n      $gapLocal: map-get($gap, $breakpoint);\r\n      @if $minWidth > 0 {\r\n        @media (min-width: $minWidth) {\r\n          padding-left: $gapLocal;\r\n          padding-right: $gapLocal;\r\n        }\r\n      } @else {\r\n        padding-left: $gapLocal;\r\n        padding-right: $gapLocal;\r\n      }\r\n    }\r\n    @if $breakpoint == $to {\r\n      $break: true;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n@mixin grid-row($settings: null) {\r\n  $settings: if($settings != null, map-merge($grid, $settings), $grid);\r\n  $gap: map-get($settings, gap);\r\n  $mode: map-get($settings, mode);\r\n\r\n  @if ($mode == float) {\r\n    &:before, &:after {\r\n      content: ' ';\r\n      display: table;\r\n      clear: both;\r\n    }\r\n  } @else {\r\n    display: flex;\r\n    flex-flow: row wrap;\r\n  }\r\n\r\n  @if type-of($gap) == number {\r\n    margin-left: -$gap;\r\n    margin-right: -$gap;\r\n  } @else {\r\n    @if (type-of($gap) == list) {\r\n      $gap: fastGridListToMap($gap, $settings);\r\n    }\r\n    @each $breakpoint, $value in $gap {\r\n      $minWidth: grid-width($breakpoint, $settings);\r\n      @if $minWidth > 0 {\r\n        @media (min-width: $minWidth) {\r\n          margin-left: -$value;\r\n          margin-right: -$value;\r\n        }\r\n      } @else {\r\n        margin-left: -$value;\r\n        margin-right: -$value;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n@mixin grid-col-internal($box-sizing, $span, $columns, $gap, $gapLocal) {\r\n  @if $span != null {\r\n    $gapAlways: if($gapLocal == null, $gap, $gapLocal);\r\n    width: 100% * $span / $columns - if($box-sizing == content-box and unit($gapAlways) == '%', $gapAlways * 2, 0);\r\n    @if $box-sizing == content-box and unit($gapAlways) != '%' {\r\n      box-sizing: border-box;\r\n    }\r\n  }\r\n  padding-left: $gapLocal;\r\n  padding-right: $gapLocal;\r\n}\r\n\r\n@mixin grid-col($spans, $settings: null) {\r\n  $settings: if($settings != null, map-merge($grid, $settings), $grid);\r\n  $gap: map-get($settings, gap);\r\n  $box-sizing: map-get($settings, box-sizing);\r\n  $mode: map-get($settings, mode);\r\n  $map: map-get($settings, breakpoints);\r\n  $spans: fastGridNormalizeSpans($spans, $settings);\r\n  $columns: nth($spans, 2);\r\n  $spans: nth($spans, 1);\r\n\r\n  @if ($mode == float) {\r\n    float: left;\r\n  }\r\n\r\n  @if type-of($gap) == number {\r\n    padding-left: $gap;\r\n    padding-right: $gap;\r\n  } @else {\r\n    @if (type-of($gap) == list) {\r\n      $gap: fastGridListToMap($gap, $settings);\r\n    }\r\n  }\r\n\r\n  @each $breakpoint, $minWidth in $map {\r\n    $span: map-get($spans, $breakpoint);\r\n    @if type-of($span) == list and nth($span, 2) == 'of' {\r\n      $columnsLocal: nth($span, 3);\r\n      $span: nth($span, 1);\r\n    }\r\n    $columnsLocal: $columns !default;\r\n\r\n    $gapLocal: null;\r\n    @if type-of($gap) == map {\r\n      $gapLocal: map-get($gap, $breakpoint);\r\n    }\r\n\r\n    @if $minWidth > 0 {\r\n      @media (min-width: $minWidth) {\r\n        @include grid-col-internal($box-sizing, $span, $columnsLocal, $gap, $gapLocal);\r\n      }\r\n    } @else {\r\n      @include grid-col-internal($box-sizing, $span, $columnsLocal, $gap, $gapLocal);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n@mixin grid-prop($prop, $spans, $settings: null) {\r\n  $settings: if($settings != null, map-merge($grid, $settings), $grid);\r\n  $map: map-get($settings, breakpoints);\r\n  $spans: fastGridNormalizeSpans($spans, $settings);\r\n  $columns: nth($spans, 2);\r\n  $spans: nth($spans, 1);\r\n\r\n  @each $breakpoint, $minWidth in $map {\r\n    $span: map-get($spans, $breakpoint);\r\n    @if type-of($span) == list and nth($span, 2) == 'of' {\r\n      $columnsLocal: nth($span, 3);\r\n      $span: nth($span, 1);\r\n    }\r\n    $columnsLocal: $columns !default;\r\n\r\n    @if $span != null {\r\n      @if $minWidth > 0 {\r\n        @media (min-width: $minWidth) {\r\n          #{$prop}: 100% * $span / $columnsLocal;\r\n        }\r\n      } @else {\r\n        #{$prop}: 100% * $span / $columnsLocal;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n@mixin grid-offset($spans, $settings: null) {\r\n  @include grid-prop(margin-left, $spans, $settings);\r\n}\r\n\r\n@mixin grid-move($spans, $settings: null) {\r\n  position: relative;\r\n  @include grid-prop(left, $spans, $settings);\r\n}\r\n",".button {\r\n  display: inline-block;\r\n  vertical-align: middle;\r\n  padding: $btn-padding;\r\n  @include ff(\"font-size\", $btn-fz);\r\n  font-family: $mainFont-bold;\r\n  font-weight: $mainFontWeight-bold;\r\n\r\n  color: #ffffff;\r\n  background: $btn-bg-color;\r\n  border-radius: 20px;\r\n\r\n  box-shadow: 0 0 20px 2px rgb(155, 68, 153);\r\n  text-transform: uppercase;\r\n  user-select: none;\r\n  cursor: pointer;\r\n  border: none;\r\n\r\n  outline: none;\r\n\r\n  transition: 1s;\r\n\r\n  &:focus,\r\n  &:hover {\r\n    outline: 0;\r\n    // background-color: darker($btn-bg-color, 2.5%);\r\n    opacity: 0.75;\r\n  }\r\n}\r\n",".link {\r\n  display: inline-block;\r\n  vertical-align: middle;\r\n  background-color: transparent;\r\n  line-height: normal;\r\n  color: #76c0f3;\r\n  border-radius: 0;\r\n  text-decoration: none;\r\n  transition: 0.4s;\r\n\r\n  &:focus,\r\n  &:hover {\r\n    text-decoration: none;\r\n    color: darker(#76c0f3, 2.5%);\r\n  }\r\n\r\n\r\n}\r\n",".title {\r\n\r\n  @include ff(\"margin-bottom\", $mb-size);\r\n\r\n\r\n  font-family: $secondFont;\r\n  line-height: normal;\r\n  font-weight: 400;\r\n\r\n  @include ff(\"font-size\", $title-fz);\r\n  &--uppercase {\r\n    text-transform: uppercase;\r\n  }\r\n\r\n  & span {\r\n    font-family: $secondFont-bold;\r\n    font-weight: 600;\r\n  }\r\n}\r\n",".promo {\r\n  position: relative;\r\n  padding-top: 2rem;\r\n  margin-bottom: var(--mb);\r\n  color: #ffffff;\r\n\r\n  background: linear-gradient(\r\n    0deg,\r\n    rgba(2, 0, 36, 1) 0%,\r\n    rgba(60, 36, 64, 1) 52%,\r\n    rgba(115, 52, 107, 1) 100%\r\n  );\r\n\r\n  background-image: url(\"../img/promo/background.jpg\");\r\n  background-size: cover;\r\n  background-position: top;\r\n  background-repeat: no-repeat;\r\n\r\n  background-color: rgba(60, 36, 64, 1);\r\n\r\n  @include for-size(tablet-portrait-up) {\r\n    padding-top: 5rem;\r\n  }\r\n\r\n  &__inner {\r\n    @include grid-row();\r\n    min-height: 50vh;\r\n    @include for-size(tablet-portrait-up) {\r\n      min-height: 75vh;\r\n    }\r\n  }\r\n\r\n  &__logo {\r\n    @include grid-col(\r\n      (\r\n        xs: 12\r\n      )\r\n    );\r\n\r\n    @include for-size(tablet-portrait-up) {\r\n      margin-bottom: 5rem;\r\n    }\r\n  }\r\n  &__text {\r\n    margin-bottom: 3rem;\r\n    @include grid-col(\r\n      (\r\n        xs: 12,\r\n        sm: 6,\r\n        md: 7\r\n      )\r\n    );\r\n    @include for-size(tablet-portrait-up) {\r\n      margin-bottom: 5rem;\r\n    }\r\n  }\r\n\r\n  & .button {\r\n    margin-top: 3rem;\r\n  }\r\n\r\n  &__slider {\r\n    @include grid-col(\r\n      (\r\n        xs: 12,\r\n        sm: 6,\r\n        md: 5\r\n      )\r\n    );\r\n  }\r\n}\r\n",".benefits {\r\n  position: relative;\r\n\r\n  text-align: center;\r\n  &::before,\r\n  &::after {\r\n    content: \"\";\r\n    position: absolute;\r\n    background-repeat: no-repeat;\r\n    background-position: 0 0;\r\n    background-size: 100%;\r\n    width: 100px;\r\n    height: 100px;\r\n    z-index: 2;\r\n  }\r\n  &::before {\r\n    bottom: 20%;\r\n    left: 15px;\r\n    background-image: url(\"../img/benefits/bg-box-left.png\");\r\n  }\r\n  &::after {\r\n    top: 40%;\r\n    right: 0;\r\n    height: 200px;\r\n    width: 200px;\r\n    background-image: url(\"../img/benefits/bg-box-right.png\");\r\n  }\r\n  @include for-size(tablet-portrait-up) {\r\n    padding: 5rem 0;\r\n  }\r\n\r\n  & .container {\r\n    padding-top: 2rem;\r\n    background-image: url(\"../img/benefits/bg-line.png\");\r\n    background-repeat: no-repeat;\r\n    background-position: 5% 0;\r\n    background-size: 50%;\r\n  }\r\n  &__list {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    padding: 0;\r\n    margin: 0;\r\n    list-style-type: none;\r\n\r\n    @include grid-row();\r\n\r\n    @include for-size(tablet-portrait-up) {\r\n      margin: 6rem 0 0;\r\n    }\r\n    @include for-size(desktop-up) {\r\n      margin: 10rem 0 0;\r\n    }\r\n  }\r\n  &__item {\r\n    position: relative;\r\n    display: block;\r\n    padding-top: 5rem;\r\n    @include ff(\"margin-bottom\", $mb-size);\r\n\r\n    @include grid-col(\r\n      (\r\n        xs: 12,\r\n        xsm: 6,\r\n        sm: 6,\r\n        md: 4\r\n      )\r\n    );\r\n\r\n    &:last-child {\r\n      margin-bottom: 0;\r\n    }\r\n\r\n    @include for-size(tablet-portrait-up) {\r\n      &:last-child {\r\n        @include ff(\"margin-bottom\", $mb-size);\r\n      }\r\n    }\r\n\r\n    &::before {\r\n      content: \"\";\r\n      position: absolute;\r\n      top: 0;\r\n      left: 50%;\r\n      transform: translateX(-50%);\r\n      -webkit-transform: translateX(-50%);\r\n      -moz-transform: translateX(-50%);\r\n      -ms-transform: translateX(-50%);\r\n      -o-transform: translateX(-50%);\r\n\r\n      width: 100%;\r\n      height: 4rem;\r\n\r\n      background-repeat: no-repeat;\r\n      background-position: center;\r\n      background-size: contain;\r\n    }\r\n\r\n    &:nth-child(1)::before {\r\n      background-image: url(\"../img/icons/icon-01.png\");\r\n    }\r\n    &:nth-child(2)::before {\r\n      background-image: url(\"../img/icons/icon-03.png\");\r\n    }\r\n    &:nth-child(3)::before {\r\n      background-image: url(\"../img/icons/icon-05.png\");\r\n    }\r\n    &:nth-child(4)::before {\r\n      background-image: url(\"../img/icons/icon-02.png\");\r\n    }\r\n    &:nth-child(5)::before {\r\n      background-image: url(\"../img/icons/icon-04.png\");\r\n    }\r\n    &:nth-child(6)::before {\r\n      background-image: url(\"../img/icons/icon-06.png\");\r\n    }\r\n\r\n    & span {\r\n      display: block;\r\n\r\n      max-width: 18rem;\r\n      margin: 0 auto;\r\n\r\n      @include for-size(tablet-portrait-up) {\r\n        font-size: 1.5rem;\r\n      }\r\n    }\r\n  }\r\n}\r\n",".block {\r\n  padding: var(--padding-bl);\r\n  &__inner {\r\n    @include grid-row();\r\n  }\r\n  &__item {\r\n    position: relative;\r\n    @include grid-col(\r\n      (\r\n        xs: 12,\r\n        sm: 6\r\n      )\r\n    );\r\n  }\r\n}\r\n",".form {\r\n  position: relative;\r\n  padding-top: 1rem;\r\n  min-height: 500px;\r\n  background-image: url(\"../img/form/m-bg.jpg\");\r\n  background-size: 100% 100%;\r\n  background-position: 0 0;\r\n  background-repeat: no-repeat;\r\n\r\n  @media (max-width: 560px) {\r\n    max-width: 300px;\r\n    margin: 0 auto;\r\n  }\r\n  @media (min-width: 560px) {\r\n    background-image: url(\"../img/form/form.png\");\r\n  }\r\n\r\n  &__inner {\r\n    margin: 2rem 1.5rem;\r\n    background-color: #fff;\r\n    border: none;\r\n    overflow: hidden;\r\n\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n    max-width: 100%;\r\n    text-align: center;\r\n\r\n    @media (min-width: 560px) {\r\n      margin-left: 29%;\r\n      margin-right: 37%;\r\n    }\r\n\r\n    @include for-size(tablet-portrait-up) {\r\n      max-width: 100%;\r\n      max-height: 450px;\r\n      margin-left: 29%;\r\n      margin-right: 37%;\r\n    }\r\n    @include for-size(desktop-up) {\r\n      max-width: 100%;\r\n      margin-left: 29%;\r\n      margin-right: 37%;\r\n    }\r\n  }\r\n\r\n  &__list {\r\n    position: relative;\r\n    z-index: 3;\r\n    padding: 0;\r\n    margin: 0;\r\n    list-style-type: none;\r\n    overflow-y: auto;\r\n    height: 100%;\r\n    max-width: 100%;\r\n  }\r\n\r\n  &__item {\r\n    margin-bottom: 0.7rem;\r\n  }\r\n\r\n  &__field {\r\n    padding: 5px;\r\n    width: 100%;\r\n    border-radius: 0;\r\n    border: none;\r\n    box-shadow: 0 3px 3px -3px #333;\r\n\r\n    &:focus,\r\n    &:hover {\r\n      box-shadow: 0 3px 3px -3px rgb(133, 67, 153);\r\n    }\r\n\r\n    &:focus::-webkit-input-placeholder,\r\n    &:hover::-webkit-input-placeholder {\r\n      color: rgb(133, 67, 153);\r\n    }\r\n    &:focus::-moz-placeholder,\r\n    &:hover::-moz-placeholder {\r\n      color: rgb(133, 67, 153);\r\n    }\r\n    &:focus:-moz-placeholder,\r\n    &:hover:-moz-placeholder {\r\n      color: rgb(133, 67, 153);\r\n    }\r\n    &:focus:-ms-input-placeholder,\r\n    &:hover:-ms-input-placeholder {\r\n      color: rgb(133, 67, 153);\r\n    }\r\n  }\r\n  &__comment {\r\n    padding: 5px;\r\n    width: 100%;\r\n    resize: none;\r\n    border-radius: 0;\r\n    border: none;\r\n    box-shadow: 0 3px 3px -3px #333;\r\n  }\r\n\r\n  & .button {\r\n    margin-top: 1rem;\r\n  }\r\n\r\n  & h3 {\r\n    font-size: 1rem;\r\n  }\r\n}\r\n",".trading {\r\n  position: relative;\r\n\r\n  &::before,\r\n  &::after {\r\n    content: '';\r\n    position: absolute;\r\n    background-repeat: no-repeat;\r\n    background-position: 0 0;\r\n    background-size: 100%;\r\n    width: 100px;\r\n    height: 100px;\r\n    z-index: 0;\r\n  }\r\n  &::before {\r\n    top: 20%;\r\n    left: 0;\r\n    height: 200px;\r\n    width: 200px;\r\n    background-image: url('../img/trading/bg-box-left.png');\r\n  }\r\n  &::after {\r\n    top: 30%;\r\n    right: 15px;\r\n    background-image: url('../img/trading/bg-box-right.png');\r\n  }\r\n  & .container {\r\n\r\n    background-image: url('../img/trading/bg-line.png');\r\n    background-repeat: no-repeat;\r\n    background-position: 95% bottom;\r\n    background-size: 40%;\r\n  }\r\n}\r\n",".slider {\r\n  position: relative;\r\n\r\n  &::before {\r\n    content: \"\";\r\n    position: absolute;\r\n    z-index: 2;\r\n    bottom: 0;\r\n    right: 0;\r\n    height: 120px;\r\n    width: 120px;\r\n    background-size: contain;\r\n    background-repeat: no-repeat;\r\n    background-position: center;\r\n    background-image: url(\"../img/slider/cow.png\");\r\n\r\n    @include for-size(tablet-portrait-up) {\r\n      height: 200px;\r\n      width: 200px;\r\n    }\r\n  }\r\n\r\n  & .swiper-container {\r\n    height: 100%;\r\n    width: 100%;\r\n    display: none;\r\n    @include for-size(tablet-portrait-up) {\r\n      display: block;\r\n    }\r\n  }\r\n  & .swiper-slide {\r\n    background-size: contain;\r\n    background-repeat: no-repeat;\r\n    background-position: center bottom;\r\n\r\n    &::after {\r\n      content: \"\";\r\n      position: absolute;\r\n      // z-index: 1;\r\n      bottom: 0;\r\n      right: 0;\r\n      top: 0;\r\n      left: 0;\r\n      height: 100%;\r\n      width: 100%;\r\n      background-size: 100%;\r\n      background-repeat: repeat-x;\r\n      background-position: center;\r\n      background-image: url(\"../img/slider/slider-bg.png\");\r\n    }\r\n  }\r\n}\r\n",".section {\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  &__inner {\r\n    @include grid-row();\r\n    @include ff(\"padding-top\", $pt-size);\r\n    @include ff(\"padding-bottom\", $pt-size);\r\n  }\r\n  &__info {\r\n    position: relative;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    margin-bottom: 1.25rem;\r\n\r\n\r\n    @include grid-col(\r\n      (\r\n        xs: 12,\r\n        sm: 5,\r\n        md: 6\r\n      )\r\n    );\r\n\r\n    @include for-size(tablet-portrait-up) {\r\n      justify-content: flex-start;\r\n      margin-bottom: 0;\r\n    }\r\n  }\r\n  &__pic {\r\n    position: relative;\r\n    width: 100%;\r\n    height: 350px;\r\n    background-repeat: no-repeat;\r\n    background-position: top;\r\n    background-size: contain;\r\n    @include grid-col(\r\n      (\r\n        xs: 12,\r\n        sm: 7,\r\n        md: 6\r\n      )\r\n    );\r\n\r\n    @include for-size(tablet-portrait-up) {\r\n      position: absolute;\r\n      right: 0;\r\n      top: 0;\r\n      min-height: 20rem;\r\n      transform: translate(150%, 0);\r\n      background-position: center;\r\n    }\r\n\r\n    &::before {\r\n      content: '';\r\n      position: absolute;\r\n      z-index: 1;\r\n      bottom: 0;\r\n      right: 40%;\r\n      width: 12rem;\r\n      height: 15rem;\r\n      background-repeat: no-repeat;\r\n      background-position: top;\r\n      background-image: url('../img/trading/cow.png');\r\n      background-size: contain;\r\n      transform: translate(40%, 0%);\r\n\r\n      @include for-size(tablet-portrait-up) {\r\n        bottom: -45px;\r\n        background-position: center;\r\n      }\r\n    }\r\n  }\r\n  &__caption {\r\n    margin-bottom: 2.5rem;\r\n    font-family: $mainFont-semibold;\r\n    @include ff(\"font-size\", $subtitle-fz);\r\n\r\n    opacity: 0.5;\r\n    color: #854399;\r\n    text-transform: uppercase;\r\n    letter-spacing: 6px;\r\n  }\r\n  &__text {\r\n    margin-bottom: 3rem;\r\n  }\r\n  & .title {\r\n    max-width: 28rem;\r\n  }\r\n  &__form {\r\n    margin-top: 2rem;\r\n    @include grid-col(\r\n      (\r\n        xs: 12,\r\n        sm: 7,\r\n        md: 6,\r\n      )\r\n    );\r\n\r\n    @include for-size(tablet-portrait-up) {\r\n      margin-top: 0\r\n    }\r\n  }\r\n  & .button {\r\n    align-self: center;\r\n    @include for-size(tablet-portrait-up) {\r\n      align-self: flex-start;\r\n    }\r\n  }\r\n}\r\n"]}